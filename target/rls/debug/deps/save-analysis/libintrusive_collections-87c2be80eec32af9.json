{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4","program":"/home/aprokruov/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","intrusive_collections","--edition=2018","/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","-C","metadata=87c2be80eec32af9","-C","extra-filename=-87c2be80eec32af9","--out-dir","/home/aprokruov/Projects/Rust/greenie/target/rls/debug/deps","-L","dependency=/home/aprokruov/Projects/Rust/greenie/target/rls/debug/deps","--extern","memoffset=/home/aprokruov/Projects/Rust/greenie/target/rls/debug/deps/libmemoffset-b0051fe8207d017e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/aprokruov/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/aprokruov/Projects/Rust/greenie/target/rls/debug/deps/libintrusive_collections-87c2be80eec32af9.rmeta"},"prelude":{"crate_id":{"name":"intrusive_collections","disambiguator":[7450095136489102486,11168941478500137100]},"crate_root":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src","external_crates":[{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[15592741845567276740,3156031529314222720]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13374244477361630302,7769620793786617884]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3975653617116332831,3246029778383962529]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[6973778690192336139,8142209516217857463]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4002864349786603122,6968583043156664114]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2197952863798108466,12954741518784284558]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17879148990353707291,7418933275643868066]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3276269728816119501,10713683943356502313]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9079514192688056085,2066675484243544940]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16656037810060450616,6984372355409432805]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10343442030709247650,15432214668922181955]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8026872218837247361,15230076463643633766]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12520459420306099037,15485725811231898325]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[735938503203299375,12161991909907012778]}},{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","num":15,"id":{"name":"memoffset","disambiguator":[5993118756594343056,58015731756788420]}}],"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":333,"byte_end":12669,"line_start":8,"line_end":333,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11844,"byte_end":11851,"line_start":311,"line_end":311,"column_start":25,"column_end":32},"alias_span":null,"name":"Adapter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11887,"byte_end":11903,"line_start":312,"line_end":312,"column_start":35,"column_end":51},"alias_span":null,"name":"IntrusivePointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11933,"byte_end":11943,"line_start":313,"line_end":313,"column_start":29,"column_end":39},"alias_span":null,"name":"KeyAdapter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11973,"byte_end":11977,"line_start":314,"line_end":314,"column_start":29,"column_end":33},"alias_span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11981,"byte_end":11995,"line_start":314,"line_end":314,"column_start":37,"column_end":51},"name":"LinkedListLink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12025,"byte_end":12035,"line_start":315,"line_end":315,"column_start":29,"column_end":39},"alias_span":null,"name":"LinkedList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12060,"byte_end":12064,"line_start":316,"line_end":316,"column_start":24,"column_end":28},"alias_span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12068,"byte_end":12078,"line_start":316,"line_end":316,"column_start":32,"column_end":42},"name":"RBTreeLink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12103,"byte_end":12109,"line_start":317,"line_end":317,"column_start":24,"column_end":30},"alias_span":null,"name":"RBTree","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12146,"byte_end":12150,"line_start":318,"line_end":318,"column_start":36,"column_end":40},"alias_span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12154,"byte_end":12174,"line_start":318,"line_end":318,"column_start":44,"column_end":64},"name":"SinglyLinkedListLink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":570},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12211,"byte_end":12227,"line_start":319,"line_end":319,"column_start":36,"column_end":52},"alias_span":null,"name":"SinglyLinkedList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12256,"byte_end":12265,"line_start":320,"line_end":320,"column_start":28,"column_end":37},"alias_span":null,"name":"UnsafeRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12299,"byte_end":12303,"line_start":321,"line_end":321,"column_start":33,"column_end":37},"alias_span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12307,"byte_end":12324,"line_start":321,"line_end":321,"column_start":41,"column_end":58},"name":"XorLinkedListLink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":714},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12358,"byte_end":12371,"line_start":322,"line_end":322,"column_start":33,"column_end":46},"alias_span":null,"name":"XorLinkedList","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":333,"byte_end":12669,"line_start":8,"line_end":333,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":51},{"krate":0,"index":88},{"krate":0,"index":99},{"krate":0,"index":105},{"krate":0,"index":261},{"krate":0,"index":504},{"krate":0,"index":636},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":883},{"krate":0,"index":913},{"krate":0,"index":911},{"krate":0,"index":908},{"krate":0,"index":904},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":893},{"krate":0,"index":895}],"decl_id":null,"docs":" Intrusive collections for Rust.","sig":null,"attributes":[{"value":"! Intrusive collections for Rust.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":333,"byte_end":368,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":369,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! This library provides a set of high-performance intrusive collections which","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":373,"byte_end":452,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"! can offer better performance and more flexibility than standard collections.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":453,"byte_end":533,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":534,"byte_end":537,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! The main difference between an intrusive collection and a normal one is that","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":538,"byte_end":618,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"! while normal collections allocate memory behind your back to keep track of a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":619,"byte_end":699,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! set of *values*, intrusive collections never allocate memory themselves and","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":700,"byte_end":779,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"! instead keep track of a set of *objects*. Such collections are called","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":780,"byte_end":853,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"! intrusive because they requires explicit support in objects to allow them to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":854,"byte_end":934,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"! be inserted into a collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":935,"byte_end":969,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":970,"byte_end":973,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":974,"byte_end":987,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":988,"byte_end":991,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":992,"byte_end":999,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"! #[macro_use]","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1000,"byte_end":1016,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"! extern crate intrusive_collections;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1017,"byte_end":1056,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"! use intrusive_collections::{LinkedList, LinkedListLink};","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1057,"byte_end":1117,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"! use std::cell::Cell;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1118,"byte_end":1142,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1143,"byte_end":1146,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! // A simple struct containing an instrusive link and a value","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1147,"byte_end":1211,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"! struct Test {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1212,"byte_end":1229,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"!     link: LinkedListLink,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1230,"byte_end":1259,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"!     value: Cell<i32>,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1260,"byte_end":1285,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1286,"byte_end":1291,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1292,"byte_end":1295,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! // The adapter describes how an object can be inserted into an intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1296,"byte_end":1372,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"! // collection. This is automatically generated using a macro.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1373,"byte_end":1438,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"! intrusive_adapter!(TestAdapter = Box<Test>: Test { link: LinkedListLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1439,"byte_end":1518,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1519,"byte_end":1522,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1523,"byte_end":1538,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"!     // Create a list and some objects","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1539,"byte_end":1580,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"!     let mut list = LinkedList::new(TestAdapter::new());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1581,"byte_end":1640,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"!     let a = Box::new(Test {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1641,"byte_end":1672,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"!         link: LinkedListLink::new(),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1673,"byte_end":1713,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"!         value: Cell::new(1),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1714,"byte_end":1746,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"!     });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1747,"byte_end":1758,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"!     let b = Box::new(Test {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1759,"byte_end":1790,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"!         link: LinkedListLink::new(),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1791,"byte_end":1831,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"!         value: Cell::new(2),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1832,"byte_end":1864,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"!     });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1865,"byte_end":1876,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"!     let c = Box::new(Test {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1877,"byte_end":1908,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"!         link: LinkedListLink::new(),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1909,"byte_end":1949,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"!         value: Cell::new(3),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1950,"byte_end":1982,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"!     });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1983,"byte_end":1994,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1995,"byte_end":1998,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"!     // Insert the objects at the front of the list","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":1999,"byte_end":2053,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"!     list.push_front(a);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2054,"byte_end":2081,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"!     list.push_front(b);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2082,"byte_end":2109,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"!     list.push_front(c);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2110,"byte_end":2137,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"!     assert_eq!(list.iter().map(|x| x.value.get()).collect::<Vec<_>>(), [3, 2, 1]);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2138,"byte_end":2224,"line_start":58,"line_end":58,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2225,"byte_end":2228,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"!     // At this point, the objects are owned by the list, and we can modify","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2229,"byte_end":2307,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"!     // them through the list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2308,"byte_end":2341,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"!     list.front().get().unwrap().value.set(4);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2342,"byte_end":2391,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"!     assert_eq!(list.iter().map(|x| x.value.get()).collect::<Vec<_>>(), [4, 2, 1]);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2392,"byte_end":2478,"line_start":63,"line_end":63,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2479,"byte_end":2482,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"!     // Removing an object from an instrusive collection gives us back the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2483,"byte_end":2560,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"!     // Box<Test> that we originally inserted into it.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2561,"byte_end":2618,"line_start":66,"line_end":66,"column_start":1,"column_end":58}},{"value":"!     let a = list.pop_front().unwrap();","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2619,"byte_end":2661,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"!     assert_eq!(a.value.get(), 4);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2662,"byte_end":2699,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"!     assert_eq!(list.iter().map(|x| x.value.get()).collect::<Vec<_>>(), [2, 1]);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2700,"byte_end":2783,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2784,"byte_end":2787,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"!     // Dropping the collection will automatically free b and c by","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2788,"byte_end":2857,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"!     // transforming them back into Box<Test> and dropping them.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2858,"byte_end":2925,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"!     drop(list);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2926,"byte_end":2945,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2946,"byte_end":2951,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2952,"byte_end":2959,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2960,"byte_end":2963,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! # Links and adapters","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2964,"byte_end":2988,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2989,"byte_end":2992,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! Intrusive collections track objects through links which are embedded within","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":2993,"byte_end":3072,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"! the objects themselves. It also allows a single object to be part of","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3073,"byte_end":3145,"line_start":80,"line_end":80,"column_start":1,"column_end":73}},{"value":"! multiple intrusive collections at once by having multiple links in it.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3146,"byte_end":3220,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3221,"byte_end":3224,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! The relationship between an object and a link inside it is described by the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3225,"byte_end":3304,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"! `Adapter` trait. Intrusive collections use an implementation of this trait","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3305,"byte_end":3383,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"! to determine which link in an object should be used by the collection. In","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3384,"byte_end":3461,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"! most cases you do not need to write an implementation manually: the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3462,"byte_end":3533,"line_start":86,"line_end":86,"column_start":1,"column_end":72}},{"value":"! `intrusive_adapter!` macro will automatically generate the necessary code.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3534,"byte_end":3612,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3613,"byte_end":3616,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! For red-black trees, the adapter must also implement the `KeyAdapter` trait","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3617,"byte_end":3696,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"! which allows a key to be extracted from an object. This key is then used to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3697,"byte_end":3776,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"! keep all elements in the tree in ascending order.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3777,"byte_end":3830,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3831,"byte_end":3834,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3835,"byte_end":3842,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"! #[macro_use]","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3843,"byte_end":3859,"line_start":94,"line_end":94,"column_start":1,"column_end":17}},{"value":"! extern crate intrusive_collections;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3860,"byte_end":3899,"line_start":95,"line_end":95,"column_start":1,"column_end":40}},{"value":"! use intrusive_collections::{SinglyLinkedListLink, SinglyLinkedList};","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3900,"byte_end":3972,"line_start":96,"line_end":96,"column_start":1,"column_end":73}},{"value":"! use intrusive_collections::{LinkedListLink, LinkedList};","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":3973,"byte_end":4033,"line_start":97,"line_end":97,"column_start":1,"column_end":61}},{"value":"! use intrusive_collections::{XorLinkedList, XorLinkedListLink};","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4034,"byte_end":4100,"line_start":98,"line_end":98,"column_start":1,"column_end":67}},{"value":"! use intrusive_collections::{RBTreeLink, RBTree, KeyAdapter};","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4101,"byte_end":4165,"line_start":99,"line_end":99,"column_start":1,"column_end":65}},{"value":"! use std::rc::Rc;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4166,"byte_end":4186,"line_start":100,"line_end":100,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4187,"byte_end":4190,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! // This struct can be inside three lists and one tree simultaneously","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4191,"byte_end":4263,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"! #[derive(Default)]","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4264,"byte_end":4286,"line_start":103,"line_end":103,"column_start":1,"column_end":23}},{"value":"! struct Test {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4287,"byte_end":4304,"line_start":104,"line_end":104,"column_start":1,"column_end":18}},{"value":"!     link: LinkedListLink,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4305,"byte_end":4334,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"!     link2: SinglyLinkedListLink,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4335,"byte_end":4371,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"!     link3: XorLinkedListLink,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4372,"byte_end":4405,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"!     link4: RBTreeLink,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4406,"byte_end":4432,"line_start":108,"line_end":108,"column_start":1,"column_end":27}},{"value":"!     value: i32,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4433,"byte_end":4452,"line_start":109,"line_end":109,"column_start":1,"column_end":20}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4453,"byte_end":4458,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4459,"byte_end":4462,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! intrusive_adapter!(MyAdapter = Rc<Test>: Test { link: LinkedListLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4463,"byte_end":4539,"line_start":112,"line_end":112,"column_start":1,"column_end":77}},{"value":"! intrusive_adapter!(MyAdapter2 = Rc<Test>: Test { link2: SinglyLinkedListLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4540,"byte_end":4624,"line_start":113,"line_end":113,"column_start":1,"column_end":85}},{"value":"! intrusive_adapter!(MyAdapter3 = Rc<Test>: Test { link3: XorLinkedListLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4625,"byte_end":4706,"line_start":114,"line_end":114,"column_start":1,"column_end":82}},{"value":"! intrusive_adapter!(MyAdapter4 = Rc<Test>: Test { link4: RBTreeLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4707,"byte_end":4781,"line_start":115,"line_end":115,"column_start":1,"column_end":75}},{"value":"! impl<'a> KeyAdapter<'a> for MyAdapter4 {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4782,"byte_end":4826,"line_start":116,"line_end":116,"column_start":1,"column_end":45}},{"value":"!     type Key = i32;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4827,"byte_end":4850,"line_start":117,"line_end":117,"column_start":1,"column_end":24}},{"value":"!     fn get_key(&self, x: &'a Test) -> i32 { x.value }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4851,"byte_end":4908,"line_start":118,"line_end":118,"column_start":1,"column_end":58}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4909,"byte_end":4914,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4915,"byte_end":4918,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4919,"byte_end":4934,"line_start":121,"line_end":121,"column_start":1,"column_end":16}},{"value":"!     let mut a = LinkedList::new(MyAdapter::new());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4935,"byte_end":4989,"line_start":122,"line_end":122,"column_start":1,"column_end":55}},{"value":"!     let mut b = SinglyLinkedList::new(MyAdapter2::new());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":4990,"byte_end":5051,"line_start":123,"line_end":123,"column_start":1,"column_end":62}},{"value":"!     let mut c = XorLinkedList::new(MyAdapter3::new());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5052,"byte_end":5110,"line_start":124,"line_end":124,"column_start":1,"column_end":59}},{"value":"!     let mut d = RBTree::new(MyAdapter4::new());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5111,"byte_end":5162,"line_start":125,"line_end":125,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5163,"byte_end":5166,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"!     let test = Rc::new(Test::default());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5167,"byte_end":5211,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"!     a.push_front(test.clone());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5212,"byte_end":5247,"line_start":128,"line_end":128,"column_start":1,"column_end":36}},{"value":"!     b.push_front(test.clone());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5248,"byte_end":5283,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"!     c.push_front(test.clone());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5284,"byte_end":5319,"line_start":130,"line_end":130,"column_start":1,"column_end":36}},{"value":"!     d.insert(test);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5320,"byte_end":5343,"line_start":131,"line_end":131,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5344,"byte_end":5349,"line_start":132,"line_end":132,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5350,"byte_end":5357,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5358,"byte_end":5361,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! # Cursors","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5362,"byte_end":5375,"line_start":135,"line_end":135,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5376,"byte_end":5379,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! Intrusive collections are manipulated using cursors. A cursor is similar to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5380,"byte_end":5459,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"! an iterator, except that it can freely seek back-and-forth, and can safely","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5460,"byte_end":5538,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"! mutate the list during iteration. This is similar to how a C++ iterator","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5539,"byte_end":5614,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"! works.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5615,"byte_end":5625,"line_start":140,"line_end":140,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5626,"byte_end":5629,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! A cursor views an intrusive collection as a circular list, with a special","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5630,"byte_end":5707,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"! null object between the last and first elements of the collection. A cursor","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5708,"byte_end":5787,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"! will either point to a valid object in the collection or to this special","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5788,"byte_end":5864,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"! null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5865,"byte_end":5881,"line_start":145,"line_end":145,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5882,"byte_end":5885,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! Cursors come in two forms: `Cursor` and `CursorMut`. A `Cursor` gives a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5886,"byte_end":5961,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"! read-only view of a collection, but you are allowed to use multiple `Cursor`","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":5962,"byte_end":6042,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"! objects simultaneously on the same collection. On the other hand,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6043,"byte_end":6112,"line_start":149,"line_end":149,"column_start":1,"column_end":70}},{"value":"! `CursorMut` can be used to mutate the collection, but you may only use one","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6113,"byte_end":6191,"line_start":150,"line_end":150,"column_start":1,"column_end":79}},{"value":"! of them at a time.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6192,"byte_end":6214,"line_start":151,"line_end":151,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6215,"byte_end":6218,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Cursors are a very powerful abstraction since they allow a collection to be","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6219,"byte_end":6298,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"! mutated safely while it is being iterated on. For example, here is a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6299,"byte_end":6371,"line_start":154,"line_end":154,"column_start":1,"column_end":73}},{"value":"! function which removes all values within a given range from a `RBTree`:","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6372,"byte_end":6447,"line_start":155,"line_end":155,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6448,"byte_end":6451,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6452,"byte_end":6459,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! #[macro_use]","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6460,"byte_end":6476,"line_start":158,"line_end":158,"column_start":1,"column_end":17}},{"value":"! extern crate intrusive_collections;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6477,"byte_end":6516,"line_start":159,"line_end":159,"column_start":1,"column_end":40}},{"value":"! use intrusive_collections::{RBTreeLink, RBTree, KeyAdapter, Bound};","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6517,"byte_end":6588,"line_start":160,"line_end":160,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6589,"byte_end":6592,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! struct Element {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6593,"byte_end":6613,"line_start":162,"line_end":162,"column_start":1,"column_end":21}},{"value":"!     link: RBTreeLink,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6614,"byte_end":6639,"line_start":163,"line_end":163,"column_start":1,"column_end":26}},{"value":"!     value: i32,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6640,"byte_end":6659,"line_start":164,"line_end":164,"column_start":1,"column_end":20}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6660,"byte_end":6665,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6666,"byte_end":6669,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! intrusive_adapter!(ElementAdapter = Box<Element>: Element { link: RBTreeLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6670,"byte_end":6754,"line_start":167,"line_end":167,"column_start":1,"column_end":85}},{"value":"! impl<'a> KeyAdapter<'a> for ElementAdapter {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6755,"byte_end":6803,"line_start":168,"line_end":168,"column_start":1,"column_end":49}},{"value":"!     type Key = i32;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6804,"byte_end":6827,"line_start":169,"line_end":169,"column_start":1,"column_end":24}},{"value":"!     fn get_key(&self, e: &'a Element) -> i32 { e.value }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6828,"byte_end":6888,"line_start":170,"line_end":170,"column_start":1,"column_end":61}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6889,"byte_end":6894,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6895,"byte_end":6898,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"! fn remove_range(tree: &mut RBTree<ElementAdapter>, min: i32, max: i32) {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6899,"byte_end":6975,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"!     // Find the first element which is greater than or equal to min","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":6976,"byte_end":7047,"line_start":174,"line_end":174,"column_start":1,"column_end":72}},{"value":"!     let mut cursor = tree.lower_bound_mut(Bound::Included(&min));","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7048,"byte_end":7117,"line_start":175,"line_end":175,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7118,"byte_end":7121,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"!     // Iterate over all elements in the range [min, max]","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7122,"byte_end":7182,"line_start":177,"line_end":177,"column_start":1,"column_end":61}},{"value":"!     while cursor.get().map_or(false, |e| e.value <= max) {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7183,"byte_end":7245,"line_start":178,"line_end":178,"column_start":1,"column_end":63}},{"value":"!         // CursorMut::remove will return a Some(<Box<Element>), which we","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7246,"byte_end":7322,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"!         // simply drop here. This will also advance the cursor to the next","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7323,"byte_end":7401,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"!         // element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7402,"byte_end":7425,"line_start":181,"line_end":181,"column_start":1,"column_end":24}},{"value":"!         cursor.remove();","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7426,"byte_end":7454,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"!     }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7455,"byte_end":7464,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7465,"byte_end":7470,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"! # fn main() {}","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7471,"byte_end":7489,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7490,"byte_end":7497,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7498,"byte_end":7501,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! # Scoped collections","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7502,"byte_end":7526,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7527,"byte_end":7530,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"! Instead of taking ownership of objects inserted into them, intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7531,"byte_end":7603,"line_start":190,"line_end":190,"column_start":1,"column_end":73}},{"value":"! collections can also work with borrowed values. This works by using","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7604,"byte_end":7675,"line_start":191,"line_end":191,"column_start":1,"column_end":72}},{"value":"! lifetimes and the borrow checker to ensure that any objects inserted into an","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7676,"byte_end":7756,"line_start":192,"line_end":192,"column_start":1,"column_end":81}},{"value":"! intrusive collection will outlive the collection itself.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7757,"byte_end":7817,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7818,"byte_end":7821,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7822,"byte_end":7829,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"! #[macro_use]","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7830,"byte_end":7846,"line_start":196,"line_end":196,"column_start":1,"column_end":17}},{"value":"! extern crate intrusive_collections;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7847,"byte_end":7886,"line_start":197,"line_end":197,"column_start":1,"column_end":40}},{"value":"! extern crate typed_arena;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7887,"byte_end":7916,"line_start":198,"line_end":198,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7917,"byte_end":7920,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"! use intrusive_collections::{LinkedListLink, LinkedList};","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7921,"byte_end":7981,"line_start":200,"line_end":200,"column_start":1,"column_end":61}},{"value":"! use typed_arena::Arena;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":7982,"byte_end":8009,"line_start":201,"line_end":201,"column_start":1,"column_end":28}},{"value":"! use std::cell::Cell;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8010,"byte_end":8034,"line_start":202,"line_end":202,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8035,"byte_end":8038,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"! struct Value {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8039,"byte_end":8057,"line_start":204,"line_end":204,"column_start":1,"column_end":19}},{"value":"!     link: LinkedListLink,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8058,"byte_end":8087,"line_start":205,"line_end":205,"column_start":1,"column_end":30}},{"value":"!     value: Cell<i32>,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8088,"byte_end":8113,"line_start":206,"line_end":206,"column_start":1,"column_end":26}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8114,"byte_end":8119,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8120,"byte_end":8123,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! // Note that we use a plain reference as the pointer type for the collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8124,"byte_end":8205,"line_start":209,"line_end":209,"column_start":1,"column_end":82}},{"value":"! intrusive_adapter!(ValueAdapter<'a> = &'a Value: Value { link: LinkedListLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8206,"byte_end":8291,"line_start":210,"line_end":210,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8292,"byte_end":8295,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8296,"byte_end":8311,"line_start":212,"line_end":212,"column_start":1,"column_end":16}},{"value":"!     // Create an arena and a list. Note that since stack objects are dropped in","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8312,"byte_end":8395,"line_start":213,"line_end":213,"column_start":1,"column_end":84}},{"value":"!     // reverse order, the Arena must be created before the LinkedList. This","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8396,"byte_end":8475,"line_start":214,"line_end":214,"column_start":1,"column_end":80}},{"value":"!     // ensures that the list is dropped before the values are freed by the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8476,"byte_end":8554,"line_start":215,"line_end":215,"column_start":1,"column_end":79}},{"value":"!     // arena. This is enforced by the Rust lifetime system.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8555,"byte_end":8618,"line_start":216,"line_end":216,"column_start":1,"column_end":64}},{"value":"!     let arena = Arena::new();","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8619,"byte_end":8652,"line_start":217,"line_end":217,"column_start":1,"column_end":34}},{"value":"!     let mut list = LinkedList::new(ValueAdapter::new());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8653,"byte_end":8713,"line_start":218,"line_end":218,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8714,"byte_end":8717,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"!     // We can now insert values allocated from the arena into the linked list","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8718,"byte_end":8799,"line_start":220,"line_end":220,"column_start":1,"column_end":82}},{"value":"!     list.push_back(arena.alloc(Value {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8800,"byte_end":8842,"line_start":221,"line_end":221,"column_start":1,"column_end":43}},{"value":"!         link: LinkedListLink::new(),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8843,"byte_end":8883,"line_start":222,"line_end":222,"column_start":1,"column_end":41}},{"value":"!         value: Cell::new(1),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8884,"byte_end":8916,"line_start":223,"line_end":223,"column_start":1,"column_end":33}},{"value":"!     }));","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8917,"byte_end":8929,"line_start":224,"line_end":224,"column_start":1,"column_end":13}},{"value":"!     list.push_back(arena.alloc(Value {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8930,"byte_end":8972,"line_start":225,"line_end":225,"column_start":1,"column_end":43}},{"value":"!         link: LinkedListLink::new(),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":8973,"byte_end":9013,"line_start":226,"line_end":226,"column_start":1,"column_end":41}},{"value":"!         value: Cell::new(2),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9014,"byte_end":9046,"line_start":227,"line_end":227,"column_start":1,"column_end":33}},{"value":"!     }));","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9047,"byte_end":9059,"line_start":228,"line_end":228,"column_start":1,"column_end":13}},{"value":"!     list.push_back(arena.alloc(Value {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9060,"byte_end":9102,"line_start":229,"line_end":229,"column_start":1,"column_end":43}},{"value":"!         link: LinkedListLink::new(),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9103,"byte_end":9143,"line_start":230,"line_end":230,"column_start":1,"column_end":41}},{"value":"!         value: Cell::new(3),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9144,"byte_end":9176,"line_start":231,"line_end":231,"column_start":1,"column_end":33}},{"value":"!     }));","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9177,"byte_end":9189,"line_start":232,"line_end":232,"column_start":1,"column_end":13}},{"value":"!     assert_eq!(list.iter().map(|x| x.value.get()).collect::<Vec<_>>(), [1, 2, 3]);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9190,"byte_end":9276,"line_start":233,"line_end":233,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9277,"byte_end":9280,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"!     // We can also insert stack allocated values into an intrusive list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9281,"byte_end":9357,"line_start":235,"line_end":235,"column_start":1,"column_end":77}},{"value":"!     // Again, the values must outlive the LinkedList.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9358,"byte_end":9415,"line_start":236,"line_end":236,"column_start":1,"column_end":58}},{"value":"!     let a = Value {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9416,"byte_end":9439,"line_start":237,"line_end":237,"column_start":1,"column_end":24}},{"value":"!         link: LinkedListLink::new(),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9440,"byte_end":9480,"line_start":238,"line_end":238,"column_start":1,"column_end":41}},{"value":"!         value: Cell::new(4),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9481,"byte_end":9513,"line_start":239,"line_end":239,"column_start":1,"column_end":33}},{"value":"!     };","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9514,"byte_end":9524,"line_start":240,"line_end":240,"column_start":1,"column_end":11}},{"value":"!     let b = Value {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9525,"byte_end":9548,"line_start":241,"line_end":241,"column_start":1,"column_end":24}},{"value":"!         link: LinkedListLink::new(),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9549,"byte_end":9589,"line_start":242,"line_end":242,"column_start":1,"column_end":41}},{"value":"!         value: Cell::new(5),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9590,"byte_end":9622,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"!     };","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9623,"byte_end":9633,"line_start":244,"line_end":244,"column_start":1,"column_end":11}},{"value":"!     let c = Value {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9634,"byte_end":9657,"line_start":245,"line_end":245,"column_start":1,"column_end":24}},{"value":"!         link: LinkedListLink::new(),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9658,"byte_end":9698,"line_start":246,"line_end":246,"column_start":1,"column_end":41}},{"value":"!         value: Cell::new(6),","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9699,"byte_end":9731,"line_start":247,"line_end":247,"column_start":1,"column_end":33}},{"value":"!     };","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9732,"byte_end":9742,"line_start":248,"line_end":248,"column_start":1,"column_end":11}},{"value":"!     let mut list2 = LinkedList::new(ValueAdapter::new());","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9743,"byte_end":9804,"line_start":249,"line_end":249,"column_start":1,"column_end":62}},{"value":"!     list2.push_back(&a);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9805,"byte_end":9833,"line_start":250,"line_end":250,"column_start":1,"column_end":29}},{"value":"!     list2.push_back(&b);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9834,"byte_end":9862,"line_start":251,"line_end":251,"column_start":1,"column_end":29}},{"value":"!     list2.push_back(&c);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9863,"byte_end":9891,"line_start":252,"line_end":252,"column_start":1,"column_end":29}},{"value":"!     assert_eq!(list2.iter().map(|x| x.value.get()).collect::<Vec<_>>(), [4, 5, 6]);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9892,"byte_end":9979,"line_start":253,"line_end":253,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9980,"byte_end":9983,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"!     // Since these are shared references, any changes in the values are reflected in","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":9984,"byte_end":10072,"line_start":255,"line_end":255,"column_start":1,"column_end":89}},{"value":"!     // the list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10073,"byte_end":10093,"line_start":256,"line_end":256,"column_start":1,"column_end":21}},{"value":"!     a.value.set(7);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10094,"byte_end":10117,"line_start":257,"line_end":257,"column_start":1,"column_end":24}},{"value":"!     assert_eq!(list2.iter().map(|x| x.value.get()).collect::<Vec<_>>(), [7, 5, 6]);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10118,"byte_end":10205,"line_start":258,"line_end":258,"column_start":1,"column_end":88}},{"value":"! }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10206,"byte_end":10211,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10212,"byte_end":10219,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10220,"byte_end":10223,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"! # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10224,"byte_end":10236,"line_start":262,"line_end":262,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10237,"byte_end":10240,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"! While it is possible to use intrusive collections without any unsafe code,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10241,"byte_end":10319,"line_start":264,"line_end":264,"column_start":1,"column_end":79}},{"value":"! this crate also exposes a few unsafe features.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10320,"byte_end":10370,"line_start":265,"line_end":265,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10371,"byte_end":10374,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"! The `cursor_from_ptr` and `cursor_mut_from_ptr` allow you to create a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10375,"byte_end":10448,"line_start":267,"line_end":267,"column_start":1,"column_end":74}},{"value":"! cursor pointing to a specific element in the collection from a pointer to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10449,"byte_end":10526,"line_start":268,"line_end":268,"column_start":1,"column_end":78}},{"value":"! that element. This is unsafe because it assumes that the objected pointed to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10527,"byte_end":10607,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"! is currently inserted in the collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10608,"byte_end":10652,"line_start":270,"line_end":270,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10653,"byte_end":10656,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"! The `UnsafeRef` type acts like `Rc`, except without the reference count.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10657,"byte_end":10733,"line_start":272,"line_end":272,"column_start":1,"column_end":77}},{"value":"! Instead, you are responsible for keeping track of the number of active","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10734,"byte_end":10808,"line_start":273,"line_end":273,"column_start":1,"column_end":75}},{"value":"! references to an object and for freeing it once the last reference is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10809,"byte_end":10882,"line_start":274,"line_end":274,"column_start":1,"column_end":74}},{"value":"! dropped. The advantage of `UnsafeRef` over `Rc` is that it reduces the size","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10883,"byte_end":10962,"line_start":275,"line_end":275,"column_start":1,"column_end":80}},{"value":"! of the allocation by two `usize` and avoids the overhead of maintaining","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":10963,"byte_end":11038,"line_start":276,"line_end":276,"column_start":1,"column_end":76}},{"value":"! reference counts.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11039,"byte_end":11060,"line_start":277,"line_end":277,"column_start":1,"column_end":22}},{"value":"warn(missing_docs)","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11062,"byte_end":11084,"line_start":279,"line_end":279,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11085,"byte_end":11111,"line_start":280,"line_end":280,"column_start":1,"column_end":27}},{"value":"no_std","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11112,"byte_end":11122,"line_start":281,"line_end":281,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13815,"byte_end":13831,"line_start":29,"line_end":29,"column_start":18,"column_end":34},"name":"IntrusivePointer","qualname":"::intrusive_pointer::IntrusivePointer","value":"IntrusivePointer<T: ?Sized>: Deref<Target = T> + Sized","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" Trait representing an owned pointer type which can be converted to and from\n a raw pointer.","sig":null,"attributes":[{"value":"/ Trait representing an owned pointer type which can be converted to and from","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13227,"byte_end":13306,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ a raw pointer.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13307,"byte_end":13325,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13326,"byte_end":13329,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented for the standard `Box`, `Rc` and","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13330,"byte_end":13406,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ `Arc` types. It is also implemented for the `UnsafeRef` pointer type","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13407,"byte_end":13479,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ provided by this crate.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13480,"byte_end":13507,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13508,"byte_end":13511,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Rust reference types (`&T`) also implement `IntrusivePointer`. This is safe","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13512,"byte_end":13591,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ because the lifetime of an intrusive collection is limited to that of the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13592,"byte_end":13669,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ pointer type. This means that a collection of `&'a T` cannot outlive any","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13670,"byte_end":13746,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ objects that are inserted into the collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13747,"byte_end":13797,"line_start":28,"line_end":28,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":14047,"byte_end":14055,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"into_raw","qualname":"::intrusive_pointer::IntrusivePointer::into_raw","value":"fn (self) -> *const T","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Consumes the owned pointer and returns a raw pointer to the owned object.","sig":null,"attributes":[{"value":"/ Consumes the owned pointer and returns a raw pointer to the owned object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13876,"byte_end":13953,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13958,"byte_end":13961,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The returned pointer must be the same as the one returned by `Deref`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13966,"byte_end":14039,"line_start":32,"line_end":32,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":14288,"byte_end":14296,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"from_raw","qualname":"::intrusive_pointer::IntrusivePointer::from_raw","value":"fn (ptr: *const T) -> Self","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Constructs an owned pointer from a raw pointer which was previously\n returned by `into_raw`.\n","sig":null,"attributes":[{"value":"/ Constructs an owned pointer from a raw pointer which was previously","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":14170,"byte_end":14241,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/ returned by `into_raw`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":14246,"byte_end":14273,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":57},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21081,"byte_end":21090,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UnsafeRef","qualname":"::unsafe_ref::UnsafeRef","value":"UnsafeRef {  }","parent":null,"children":[{"krate":0,"index":59}],"decl_id":null,"docs":" Unchecked shared pointer","sig":null,"attributes":[{"value":"/ Unchecked shared pointer","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":20657,"byte_end":20685,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":20686,"byte_end":20689,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type acts like a `Rc` or `Arc` except that no reference count is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":20690,"byte_end":20763,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ maintained. Instead, the user is responsible for freeing the managed object","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":20764,"byte_end":20843,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ once it is no longer in use.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":20844,"byte_end":20876,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":20877,"byte_end":20880,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ You must guarantee that an object managed by an `UnsafeRef` is not","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":20881,"byte_end":20951,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ moved, dropped or accessed through a mutable reference as long as at least","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":20952,"byte_end":21030,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ one `UnsafeRef` is pointing to it.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21031,"byte_end":21069,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21342,"byte_end":21350,"line_start":35,"line_end":35,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<UnsafeRef<T>>::from_raw","value":"fn (val: *const T) -> UnsafeRef<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an `UnsafeRef` from a raw pointer","sig":null,"attributes":[{"value":"/ Creates an `UnsafeRef` from a raw pointer","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21163,"byte_end":21208,"line_start":29,"line_end":29,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21213,"byte_end":21216,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21221,"byte_end":21233,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21238,"byte_end":21241,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ You must ensure that the `UnsafeRef` guarantees are upheld.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21246,"byte_end":21309,"line_start":33,"line_end":33,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21314,"byte_end":21323,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21553,"byte_end":21561,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<UnsafeRef<T>>::into_raw","value":"fn (ptr: Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Converts an `UnsafeRef` into a raw pointer\n","sig":null,"attributes":[{"value":"/ Converts an `UnsafeRef` into a raw pointer","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21481,"byte_end":21527,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21532,"byte_end":21541,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21745,"byte_end":21753,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"from_box","qualname":"<UnsafeRef<T>>::from_box","value":"fn (val: Box<T>) -> UnsafeRef<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an `UnsafeRef` from a `Box`\n","sig":null,"attributes":[{"value":"/ Creates an `UnsafeRef` from a `Box`","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21680,"byte_end":21719,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21724,"byte_end":21733,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22221,"byte_end":22229,"line_start":65,"line_end":65,"column_start":19,"column_end":27},"name":"into_box","qualname":"<UnsafeRef<T>>::into_box","value":"fn (ptr: Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `UnsafeRef` into a `Box`","sig":null,"attributes":[{"value":"/ Converts an `UnsafeRef` into a `Box`","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21855,"byte_end":21895,"line_start":56,"line_end":56,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21900,"byte_end":21903,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21908,"byte_end":21920,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21925,"byte_end":21928,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ You must ensure that this is the only `UnsafeRef` managing this","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21933,"byte_end":22000,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/ object and that it is not currently a member of any intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22005,"byte_end":22070,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/ collections. This operation is only valid if the `UnsafeRef` was","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22075,"byte_end":22143,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/ created using `UnsafeRef::from_box`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22148,"byte_end":22188,"line_start":63,"line_end":63,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22193,"byte_end":22202,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":90},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25007,"byte_end":25014,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"name":"Adapter","qualname":"::adapter::Adapter","value":"Adapter","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" Trait for a adapter which allows a type to be inserted into an intrusive\n collection. The `Link` type contains the collection-specific metadata which\n allows an object to be inserted into an intrusive collection. This type\n needs to match the collection type (eg. `LinkedListLink` for inserting\n in a `LinkedList`).","sig":null,"attributes":[{"value":"/ Trait for a adapter which allows a type to be inserted into an intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23498,"byte_end":23574,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ collection. The `Link` type contains the collection-specific metadata which","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23575,"byte_end":23654,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ allows an object to be inserted into an intrusive collection. This type","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23655,"byte_end":23730,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ needs to match the collection type (eg. `LinkedListLink` for inserting","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23731,"byte_end":23805,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ in a `LinkedList`).","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23806,"byte_end":23829,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23830,"byte_end":23833,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Value` is the actual object type managed by the collection. This type will","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23834,"byte_end":23913,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ typically have an instance of `Link` as a struct field.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23914,"byte_end":23973,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23974,"byte_end":23977,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Pointer` is a pointer type which \"owns\" an object of type `Value`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":23978,"byte_end":24049,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ Operations which insert an element into an intrusive collection will accept","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24050,"byte_end":24129,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ such a pointer and operations which remove an element will return this type.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24130,"byte_end":24210,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24211,"byte_end":24214,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A single object type may have multiple adapters, which allows it to be part","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24215,"byte_end":24294,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ of multiple intrusive collections simultaneously.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24295,"byte_end":24348,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24349,"byte_end":24352,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ In most cases you do not need to implement this trait manually: the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24353,"byte_end":24424,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ `intrusive_adapter!` macro will generate the necessary implementation for a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24425,"byte_end":24504,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ given type and its link field. However it is possible to implement it","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24505,"byte_end":24578,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ manually if the intrusive link is not a direct field of the object type.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24579,"byte_end":24655,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24656,"byte_end":24659,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is also possible to create stateful adapters. This allows links and","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24660,"byte_end":24734,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ containers to be separated and avoids the need for objects to be modified to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24735,"byte_end":24815,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ contain a link.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24816,"byte_end":24835,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24836,"byte_end":24839,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24840,"byte_end":24852,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24853,"byte_end":24856,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ It must be possible to get back a reference to the container by passing a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24857,"byte_end":24934,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ pointer returned by `get_link` to `get_container`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":24935,"byte_end":24989,"line_start":38,"line_end":38,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25138,"byte_end":25142,"line_start":42,"line_end":42,"column_start":10,"column_end":14},"name":"Link","qualname":"::adapter::Adapter::Link","value":"type Link;","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Collection-specific link type which allows an object to be inserted in\n an intrusive collection.\n","sig":null,"attributes":[{"value":"/ Collection-specific link type which allows an object to be inserted in","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25021,"byte_end":25095,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ an intrusive collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25100,"byte_end":25128,"line_start":41,"line_end":41,"column_start":5,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25220,"byte_end":25225,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Value","qualname":"::adapter::Adapter::Value","value":"type Value: ?Sized;","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Object type which is inserted in an intrusive collection.\n","sig":null,"attributes":[{"value":"/ Object type which is inserted in an intrusive collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25149,"byte_end":25210,"line_start":44,"line_end":44,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25301,"byte_end":25308,"line_start":48,"line_end":48,"column_start":10,"column_end":17},"name":"Pointer","qualname":"::adapter::Adapter::Pointer","value":"type Pointer: IntrusivePointer<Self::Value>;","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Pointer type which owns an instance of a value.\n","sig":null,"attributes":[{"value":"/ Pointer type which owns an instance of a value.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25240,"byte_end":25291,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25437,"byte_end":25446,"line_start":51,"line_end":51,"column_start":15,"column_end":24},"name":"get_value","qualname":"::adapter::Adapter::get_value","value":"fn (&self, link: *const Self::Link) -> *const Self::Value","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Gets a reference to an object from a reference to a link in that object.\n","sig":null,"attributes":[{"value":"/ Gets a reference to an object from a reference to a link in that object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25346,"byte_end":25422,"line_start":50,"line_end":50,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25576,"byte_end":25584,"line_start":54,"line_end":54,"column_start":15,"column_end":23},"name":"get_link","qualname":"::adapter::Adapter::get_link","value":"fn (&self, value: *const Self::Value) -> *const Self::Link","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Gets a reference to the link for the given object.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the link for the given object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/adapter.rs","byte_start":25507,"byte_end":25561,"line_start":53,"line_end":53,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33939,"byte_end":33949,"line_start":61,"line_end":61,"column_start":11,"column_end":21},"name":"KeyAdapter","qualname":"::key_adapter::KeyAdapter","value":"KeyAdapter<'a>: Adapter","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" Extension of the `Adapter` trait to provide a way of extracting a key from\n an object. This key can then be used as an index in certain intrusive\n collections (currently only `RBTree` uses this).","sig":null,"attributes":[{"value":"/ Extension of the `Adapter` trait to provide a way of extracting a key from","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32346,"byte_end":32424,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ an object. This key can then be used as an index in certain intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32425,"byte_end":32498,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ collections (currently only `RBTree` uses this).","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32499,"byte_end":32551,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32552,"byte_end":32555,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The key can be returned either as a value or as a reference, which allows","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32556,"byte_end":32633,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ you to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32634,"byte_end":32644,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32645,"byte_end":32648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32649,"byte_end":32663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32664,"byte_end":32667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32668,"byte_end":32675,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32676,"byte_end":32692,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/ extern crate intrusive_collections;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32693,"byte_end":32732,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ use intrusive_collections::{RBTreeLink, KeyAdapter};","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32733,"byte_end":32789,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32790,"byte_end":32793,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ struct S {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32794,"byte_end":32808,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/     link: RBTreeLink,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32809,"byte_end":32834,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/     key: u32,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32835,"byte_end":32852,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/     value: u64,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32853,"byte_end":32872,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32873,"byte_end":32878,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32879,"byte_end":32882,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Adapter which returns a key by value","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32883,"byte_end":32926,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ intrusive_adapter!(MyAdapter = Box<S>: S { link : RBTreeLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32927,"byte_end":32995,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ impl<'a> KeyAdapter<'a> for MyAdapter {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":32996,"byte_end":33039,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/     type Key = u32;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33040,"byte_end":33063,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/     fn get_key(&self, s: &'a S) -> u32 { s.key }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33064,"byte_end":33116,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33117,"byte_end":33122,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33123,"byte_end":33126,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Adapter which returns a key by reference","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33127,"byte_end":33174,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/ intrusive_adapter!(MyAdapter2 = Box<S>: S { link : RBTreeLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33175,"byte_end":33244,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ impl<'a> KeyAdapter<'a> for MyAdapter2 {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33245,"byte_end":33289,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/     type Key = &'a u32;","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33290,"byte_end":33317,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     fn get_key(&self, s: &'a S) -> &'a u32 { &s.key }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33318,"byte_end":33375,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33376,"byte_end":33381,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33382,"byte_end":33385,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ struct U {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33386,"byte_end":33400,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/     link: RBTreeLink,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33401,"byte_end":33426,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/     key1: i32,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33427,"byte_end":33445,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/     key2: String,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33446,"byte_end":33467,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     key3: f64,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33468,"byte_end":33486,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33487,"byte_end":33492,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33493,"byte_end":33496,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // Adapter which returns a tuple as a key. When used in a RBTree, this will","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33497,"byte_end":33576,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ // keep all elements sorted by `key1` first, then `key2` and finally `key3`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33577,"byte_end":33657,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ intrusive_adapter!(MyAdapter3 = Box<U>: U { link : RBTreeLink });","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33658,"byte_end":33727,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"/ impl<'a> KeyAdapter<'a> for MyAdapter3 {","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33728,"byte_end":33772,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/     type Key = (i32, &'a str, f64);","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33773,"byte_end":33812,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/     fn get_key(&self, u: &'a U) -> Self::Key { (u.key1, &u.key2, u.key3) }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33813,"byte_end":33891,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ }","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33892,"byte_end":33897,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33898,"byte_end":33901,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # fn main() {}","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33902,"byte_end":33920,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33921,"byte_end":33928,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":103},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":34021,"byte_end":34024,"line_start":63,"line_end":63,"column_start":10,"column_end":13},"name":"Key","qualname":"::key_adapter::KeyAdapter::Key","value":"type Key;","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Type of the key returned by `get_key`.\n","sig":null,"attributes":[{"value":"/ Type of the key returned by `get_key`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33969,"byte_end":34011,"line_start":62,"line_end":62,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":34077,"byte_end":34084,"line_start":66,"line_end":66,"column_start":8,"column_end":15},"name":"get_key","qualname":"::key_adapter::KeyAdapter::get_key","value":"fn (&self, value: &'a Self::Value) -> Self::Key","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Gets the key for the given object.\n","sig":null,"attributes":[{"value":"/ Gets the key for the given object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":34031,"byte_end":34069,"line_start":65,"line_end":65,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::linked_list","value":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":809},{"krate":0,"index":821},{"krate":0,"index":819},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":182},{"krate":0,"index":187},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":220},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":238},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":258}],"decl_id":null,"docs":" Intrusive doubly-linked list.\n","sig":null,"attributes":[{"value":"! Intrusive doubly-linked list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":34466,"byte_end":34499,"line_start":8,"line_end":8,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":34862,"byte_end":34866,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Link","qualname":"::linked_list::Link","value":"Link {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"decl_id":null,"docs":" Intrusive link that allows an object to be inserted into a `LinkedList`.\n","sig":null,"attributes":[{"value":"/ Intrusive link that allows an object to be inserted into a `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":34774,"byte_end":34850,"line_start":20,"line_end":20,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":34995,"byte_end":34998,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"new","qualname":"<Link>::new","value":"fn () -> Link","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Link`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Link`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":34938,"byte_end":34963,"line_start":27,"line_end":27,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":34968,"byte_end":34977,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35225,"byte_end":35234,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"is_linked","qualname":"<Link>::is_linked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `Link` is linked into a `LinkedList`.\n","sig":null,"attributes":[{"value":"/ Checks whether the `Link` is linked into a `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35139,"byte_end":35199,"line_start":36,"line_end":36,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35204,"byte_end":35213,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35712,"byte_end":35724,"line_start":51,"line_end":51,"column_start":19,"column_end":31},"name":"force_unlink","qualname":"<Link>::force_unlink","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlinks an object from a `LinkedList`.","sig":null,"attributes":[{"value":"/ Forcibly unlinks an object from a `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35306,"byte_end":35357,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35362,"byte_end":35365,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35370,"byte_end":35382,"line_start":44,"line_end":44,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35387,"byte_end":35390,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ It is undefined behavior to call this function while still linked into a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35395,"byte_end":35471,"line_start":46,"line_end":46,"column_start":5,"column_end":81}},{"value":"/ `LinkedList`. The only situation where this function is useful is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35476,"byte_end":35545,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ after calling `fast_clear` on a `LinkedList`, since this clears","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35550,"byte_end":35617,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ the collection without marking the nodes as unlinked.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35622,"byte_end":35679,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35684,"byte_end":35693,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39362,"byte_end":39368,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::linked_list::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" A cursor which provides read-only access to a `LinkedList`.\n","sig":null,"attributes":[{"value":"/ A cursor which provides read-only access to a `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39287,"byte_end":39350,"line_start":200,"line_end":200,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39818,"byte_end":39825,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Cursor>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the cursor is currently pointing to the null object.\n","sig":null,"attributes":[{"value":"/ Checks if the cursor is currently pointing to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39726,"byte_end":39792,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39797,"byte_end":39806,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40098,"byte_end":40101,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"get","qualname":"<Cursor>::get","value":"fn (&self) -> Option<&'a A::Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the object that the cursor is currently\n pointing to.","sig":null,"attributes":[{"value":"/ Returns a reference to the object that the cursor is currently","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39885,"byte_end":39951,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/ pointing to.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39956,"byte_end":39972,"line_start":224,"line_end":224,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39977,"byte_end":39980,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39985,"byte_end":40056,"line_start":226,"line_end":226,"column_start":5,"column_end":76}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40061,"byte_end":40072,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40077,"byte_end":40086,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40520,"byte_end":40533,"line_start":243,"line_end":243,"column_start":12,"column_end":25},"name":"clone_pointer","qualname":"<Cursor>::clone_pointer","value":"fn (&self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Clones and returns the pointer that points to the element that the\n cursor is referencing.","sig":null,"attributes":[{"value":"/ Clones and returns the pointer that points to the element that the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40293,"byte_end":40363,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ cursor is referencing.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40368,"byte_end":40394,"line_start":238,"line_end":238,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40399,"byte_end":40402,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40407,"byte_end":40478,"line_start":240,"line_end":240,"column_start":5,"column_end":76}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40483,"byte_end":40494,"line_start":241,"line_end":241,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40499,"byte_end":40508,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41091,"byte_end":41100,"line_start":257,"line_end":257,"column_start":12,"column_end":21},"name":"move_next","qualname":"<Cursor>::move_next","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the next element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the next element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40762,"byte_end":40823,"line_start":251,"line_end":251,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40828,"byte_end":40831,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40836,"byte_end":40909,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ the first element of the `LinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40914,"byte_end":40986,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ element of the `LinkedList` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":40991,"byte_end":41065,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41070,"byte_end":41079,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41615,"byte_end":41624,"line_start":271,"line_end":271,"column_start":12,"column_end":21},"name":"move_prev","qualname":"<Cursor>::move_prev","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the previous element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the previous element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41282,"byte_end":41347,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41352,"byte_end":41355,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41360,"byte_end":41433,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ the last element of the `LinkedList`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41438,"byte_end":41510,"line_start":268,"line_end":268,"column_start":5,"column_end":77}},{"value":"/ element of the `LinkedList` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41515,"byte_end":41589,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41594,"byte_end":41603,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42134,"byte_end":42143,"line_start":285,"line_end":285,"column_start":12,"column_end":21},"name":"peek_next","qualname":"<Cursor>::peek_next","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the next element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the next element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41806,"byte_end":41876,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41881,"byte_end":41884,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41889,"byte_end":41962,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ first element of the `LinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":41967,"byte_end":42035,"line_start":282,"line_end":282,"column_start":5,"column_end":73}},{"value":"/ element of the `LinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42040,"byte_end":42108,"line_start":283,"line_end":283,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42113,"byte_end":42122,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42589,"byte_end":42598,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"peek_prev","qualname":"<Cursor>::peek_prev","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the previous element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the previous element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42257,"byte_end":42331,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42336,"byte_end":42339,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42344,"byte_end":42417,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ last element of the `LinkedList`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42422,"byte_end":42490,"line_start":294,"line_end":294,"column_start":5,"column_end":73}},{"value":"/ element of the `LinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42495,"byte_end":42563,"line_start":295,"line_end":295,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42568,"byte_end":42577,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":159},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42783,"byte_end":42792,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"CursorMut","qualname":"::linked_list::CursorMut","value":"CursorMut {  }","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":" A cursor which provides mutable access to a `LinkedList`.\n","sig":null,"attributes":[{"value":"/ A cursor which provides mutable access to a `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42710,"byte_end":42771,"line_start":304,"line_end":304,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43031,"byte_end":43038,"line_start":313,"line_end":313,"column_start":12,"column_end":19},"name":"is_null","qualname":"<CursorMut>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the cursor is currently pointing to the null object.\n","sig":null,"attributes":[{"value":"/ Checks if the cursor is currently pointing to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42939,"byte_end":43005,"line_start":311,"line_end":311,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43010,"byte_end":43019,"line_start":312,"line_end":312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43309,"byte_end":43312,"line_start":323,"line_end":323,"column_start":12,"column_end":15},"name":"get","qualname":"<CursorMut>::get","value":"fn (&self) -> Option<&A::Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the object that the cursor is currently\n pointing to.","sig":null,"attributes":[{"value":"/ Returns a reference to the object that the cursor is currently","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43098,"byte_end":43164,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"/ pointing to.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43169,"byte_end":43185,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43190,"byte_end":43193,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This returns None if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43198,"byte_end":43267,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43272,"byte_end":43283,"line_start":321,"line_end":321,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43288,"byte_end":43297,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43812,"byte_end":43821,"line_start":337,"line_end":337,"column_start":12,"column_end":21},"name":"as_cursor","qualname":"<CursorMut>::as_cursor","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a read-only cursor pointing to the current element.","sig":null,"attributes":[{"value":"/ Returns a read-only cursor pointing to the current element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43501,"byte_end":43564,"line_start":331,"line_end":331,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43569,"byte_end":43572,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned `Cursor` is bound to that of the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43577,"byte_end":43642,"line_start":333,"line_end":333,"column_start":5,"column_end":70}},{"value":"/ `CursorMut`, which means it cannot outlive the `CursorMut` and that the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43647,"byte_end":43722,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ `CursorMut` is frozen for the lifetime of the `Cursor`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43727,"byte_end":43786,"line_start":335,"line_end":335,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43791,"byte_end":43800,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44279,"byte_end":44288,"line_start":350,"line_end":350,"column_start":12,"column_end":21},"name":"move_next","qualname":"<CursorMut>::move_next","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the next element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the next element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":43950,"byte_end":44011,"line_start":344,"line_end":344,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44016,"byte_end":44019,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44024,"byte_end":44097,"line_start":346,"line_end":346,"column_start":5,"column_end":78}},{"value":"/ the first element of the `LinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44102,"byte_end":44174,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ element of the `LinkedList` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44179,"byte_end":44253,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44258,"byte_end":44267,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44803,"byte_end":44812,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"move_prev","qualname":"<CursorMut>::move_prev","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the previous element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the previous element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44470,"byte_end":44535,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44540,"byte_end":44543,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44548,"byte_end":44621,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ the last element of the `LinkedList`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44626,"byte_end":44698,"line_start":361,"line_end":361,"column_start":5,"column_end":77}},{"value":"/ element of the `LinkedList` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44703,"byte_end":44777,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44782,"byte_end":44791,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45322,"byte_end":45331,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"peek_next","qualname":"<CursorMut>::peek_next","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the next element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the next element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":44994,"byte_end":45064,"line_start":372,"line_end":372,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45069,"byte_end":45072,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45077,"byte_end":45150,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/ first element of the `LinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45155,"byte_end":45223,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ element of the `LinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45228,"byte_end":45296,"line_start":376,"line_end":376,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45301,"byte_end":45310,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45781,"byte_end":45790,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"peek_prev","qualname":"<CursorMut>::peek_prev","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the previous element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the previous element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45449,"byte_end":45523,"line_start":384,"line_end":384,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45528,"byte_end":45531,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45536,"byte_end":45609,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ last element of the `LinkedList`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45614,"byte_end":45682,"line_start":387,"line_end":387,"column_start":5,"column_end":73}},{"value":"/ element of the `LinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45687,"byte_end":45755,"line_start":388,"line_end":388,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45760,"byte_end":45769,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":46271,"byte_end":46277,"line_start":404,"line_end":404,"column_start":12,"column_end":18},"name":"remove","qualname":"<CursorMut>::remove","value":"fn (&mut self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the current element from the `LinkedList`.","sig":null,"attributes":[{"value":"/ Removes the current element from the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45908,"byte_end":45962,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45967,"byte_end":45970,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ A pointer to the element that was removed is returned, and the cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":45975,"byte_end":46051,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ moved to point to the next element in the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":46056,"byte_end":46115,"line_start":399,"line_end":399,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":46120,"byte_end":46123,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If the cursor is currently pointing to the null object then no element","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":46128,"byte_end":46202,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ is removed and `None` is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":46207,"byte_end":46245,"line_start":402,"line_end":402,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":46250,"byte_end":46259,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47431,"byte_end":47443,"line_start":437,"line_end":437,"column_start":12,"column_end":24},"name":"replace_with","qualname":"<CursorMut>::replace_with","value":"fn (&mut self, val: A::Pointer) -> Result<A::Pointer, A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the current element from the `LinkedList` and inserts another\n object in its place.","sig":null,"attributes":[{"value":"/ Removes the current element from the `LinkedList` and inserts another","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":46887,"byte_end":46960,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ object in its place.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":46965,"byte_end":46989,"line_start":424,"line_end":424,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":46994,"byte_end":46997,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ A pointer to the element that was removed is returned, and the cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47002,"byte_end":47078,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ modified to point to the newly added element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47083,"byte_end":47132,"line_start":427,"line_end":427,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47137,"byte_end":47140,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If the cursor is currently pointing to the null object then an error is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47145,"byte_end":47220,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ returned containing the given `val` parameter.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47225,"byte_end":47275,"line_start":430,"line_end":430,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47280,"byte_end":47283,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47288,"byte_end":47300,"line_start":432,"line_end":432,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47305,"byte_end":47308,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47313,"byte_end":47385,"line_start":434,"line_end":434,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47390,"byte_end":47405,"line_start":435,"line_end":435,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":47410,"byte_end":47419,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48420,"byte_end":48432,"line_start":466,"line_end":466,"column_start":12,"column_end":24},"name":"insert_after","qualname":"<CursorMut>::insert_after","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `LinkedList` after the current one.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `LinkedList` after the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48058,"byte_end":48128,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48133,"byte_end":48136,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48141,"byte_end":48213,"line_start":458,"line_end":458,"column_start":5,"column_end":77}},{"value":"/ inserted at the front of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48218,"byte_end":48264,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48269,"byte_end":48272,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48277,"byte_end":48289,"line_start":461,"line_end":461,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48294,"byte_end":48297,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48302,"byte_end":48374,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48379,"byte_end":48394,"line_start":464,"line_end":464,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48399,"byte_end":48408,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49234,"byte_end":49247,"line_start":491,"line_end":491,"column_start":12,"column_end":25},"name":"insert_before","qualname":"<CursorMut>::insert_before","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `LinkedList` before the current one.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `LinkedList` before the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48873,"byte_end":48944,"line_start":481,"line_end":481,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48949,"byte_end":48952,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":48957,"byte_end":49029,"line_start":483,"line_end":483,"column_start":5,"column_end":77}},{"value":"/ inserted at the end of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49034,"byte_end":49078,"line_start":484,"line_end":484,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49083,"byte_end":49086,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49091,"byte_end":49103,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49108,"byte_end":49111,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49116,"byte_end":49188,"line_start":488,"line_end":488,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49193,"byte_end":49208,"line_start":489,"line_end":489,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49213,"byte_end":49222,"line_start":490,"line_end":490,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49928,"byte_end":49940,"line_start":511,"line_end":511,"column_start":12,"column_end":24},"name":"splice_after","qualname":"<CursorMut>::splice_after","value":"fn (&mut self, mut list: LinkedList<A>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts the elements from the given `LinkedList` after the current one.","sig":null,"attributes":[{"value":"/ Inserts the elements from the given `LinkedList` after the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49689,"byte_end":49764,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49769,"byte_end":49772,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new elements are","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49777,"byte_end":49851,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ inserted at the start of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49856,"byte_end":49902,"line_start":509,"line_end":509,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":49907,"byte_end":49916,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":50776,"byte_end":50789,"line_start":533,"line_end":533,"column_start":12,"column_end":25},"name":"splice_before","qualname":"<CursorMut>::splice_before","value":"fn (&mut self, mut list: LinkedList<A>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves all element from the given `LinkedList` before the current one.","sig":null,"attributes":[{"value":"/ Moves all element from the given `LinkedList` before the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":50541,"byte_end":50614,"line_start":528,"line_end":528,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":50619,"byte_end":50622,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new elements are","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":50627,"byte_end":50701,"line_start":530,"line_end":530,"column_start":5,"column_end":79}},{"value":"/ inserted at the end of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":50706,"byte_end":50750,"line_start":531,"line_end":531,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":50755,"byte_end":50764,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":51735,"byte_end":51746,"line_start":557,"line_end":557,"column_start":12,"column_end":23},"name":"split_after","qualname":"<CursorMut>::split_after","value":"fn (&mut self) -> LinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Splits the list into two after the current element. This will return a\n new list consisting of everything after the cursor, with the original\n list retaining everything before.","sig":null,"attributes":[{"value":"/ Splits the list into two after the current element. This will return a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":51390,"byte_end":51464,"line_start":550,"line_end":550,"column_start":5,"column_end":79}},{"value":"/ new list consisting of everything after the cursor, with the original","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":51469,"byte_end":51542,"line_start":551,"line_end":551,"column_start":5,"column_end":78}},{"value":"/ list retaining everything before.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":51547,"byte_end":51584,"line_start":552,"line_end":552,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":51589,"byte_end":51592,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the entire contents","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":51597,"byte_end":51670,"line_start":554,"line_end":554,"column_start":5,"column_end":78}},{"value":"/ of the `LinkedList` are moved.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":51675,"byte_end":51709,"line_start":555,"line_end":555,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":51714,"byte_end":51723,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":53067,"byte_end":53079,"line_start":596,"line_end":596,"column_start":12,"column_end":24},"name":"split_before","qualname":"<CursorMut>::split_before","value":"fn (&mut self) -> LinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Splits the list into two before the current element. This will return a\n new list consisting of everything before the cursor, with the original\n list retaining everything after.","sig":null,"attributes":[{"value":"/ Splits the list into two before the current element. This will return a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":52721,"byte_end":52796,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ new list consisting of everything before the cursor, with the original","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":52801,"byte_end":52875,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ list retaining everything after.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":52880,"byte_end":52916,"line_start":591,"line_end":591,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":52921,"byte_end":52924,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the entire contents","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":52929,"byte_end":53002,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ of the `LinkedList` are moved.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":53007,"byte_end":53041,"line_start":594,"line_end":594,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":53046,"byte_end":53055,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":54404,"byte_end":54414,"line_start":637,"line_end":637,"column_start":12,"column_end":22},"name":"LinkedList","qualname":"::linked_list::LinkedList","value":"LinkedList {  }","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"decl_id":null,"docs":" An intrusive doubly-linked list.","sig":null,"attributes":[{"value":"/ An intrusive doubly-linked list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":54229,"byte_end":54265,"line_start":633,"line_end":633,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":54266,"byte_end":54269,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ When this collection is dropped, all elements linked into it will be","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":54270,"byte_end":54342,"line_start":635,"line_end":635,"column_start":1,"column_end":73}},{"value":"/ converted back to owned pointers and dropped.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":54343,"byte_end":54392,"line_start":636,"line_end":636,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55258,"byte_end":55261,"line_start":669,"line_end":669,"column_start":12,"column_end":15},"name":"new","qualname":"<LinkedList<A>>::new","value":"fn (adapter: A) -> LinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `LinkedList`.\n","sig":null,"attributes":[{"value":"/ Creates an empty `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55161,"byte_end":55195,"line_start":666,"line_end":666,"column_start":5,"column_end":39}},{"value":"cfg(not (feature = \"nightly\"))","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55200,"byte_end":55232,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55237,"byte_end":55246,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55500,"byte_end":55508,"line_start":679,"line_end":679,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LinkedList<A>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `LinkedList` is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `LinkedList` is empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55426,"byte_end":55474,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55479,"byte_end":55488,"line_start":678,"line_end":678,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55633,"byte_end":55639,"line_start":685,"line_end":685,"column_start":12,"column_end":18},"name":"cursor","qualname":"<LinkedList<A>>::cursor","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a null `Cursor` for this list.\n","sig":null,"attributes":[{"value":"/ Returns a null `Cursor` for this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55565,"byte_end":55607,"line_start":683,"line_end":683,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55612,"byte_end":55621,"line_start":684,"line_end":684,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55837,"byte_end":55847,"line_start":694,"line_end":694,"column_start":12,"column_end":22},"name":"cursor_mut","qualname":"<LinkedList<A>>::cursor_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a null `CursorMut` for this list.\n","sig":null,"attributes":[{"value":"/ Returns a null `CursorMut` for this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55766,"byte_end":55811,"line_start":692,"line_end":692,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55816,"byte_end":55825,"line_start":693,"line_end":693,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56174,"byte_end":56189,"line_start":707,"line_end":707,"column_start":19,"column_end":34},"name":"cursor_from_ptr","qualname":"<LinkedList<A>>::cursor_from_ptr","value":"fn (&self, ptr: *const A::Value) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Cursor` from a pointer to an element.","sig":null,"attributes":[{"value":"/ Creates a `Cursor` from a pointer to an element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":55984,"byte_end":56036,"line_start":701,"line_end":701,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56041,"byte_end":56044,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56049,"byte_end":56061,"line_start":703,"line_end":703,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56066,"byte_end":56069,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56074,"byte_end":56141,"line_start":705,"line_end":705,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56146,"byte_end":56155,"line_start":706,"line_end":706,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56551,"byte_end":56570,"line_start":720,"line_end":720,"column_start":19,"column_end":38},"name":"cursor_mut_from_ptr","qualname":"<LinkedList<A>>::cursor_mut_from_ptr","value":"fn (&mut self, ptr: *const A::Value) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CursorMut` from a pointer to an element.","sig":null,"attributes":[{"value":"/ Creates a `CursorMut` from a pointer to an element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56358,"byte_end":56413,"line_start":714,"line_end":714,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56418,"byte_end":56421,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56426,"byte_end":56438,"line_start":716,"line_end":716,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56443,"byte_end":56446,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56451,"byte_end":56518,"line_start":718,"line_end":718,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56523,"byte_end":56532,"line_start":719,"line_end":719,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56901,"byte_end":56906,"line_start":730,"line_end":730,"column_start":12,"column_end":17},"name":"front","qualname":"<LinkedList<A>>::front","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to the first element of the list. If the\n list is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to the first element of the list. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56749,"byte_end":56821,"line_start":727,"line_end":727,"column_start":5,"column_end":77}},{"value":"/ list is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56826,"byte_end":56875,"line_start":728,"line_end":728,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":56880,"byte_end":56889,"line_start":729,"line_end":729,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57186,"byte_end":57195,"line_start":739,"line_end":739,"column_start":12,"column_end":21},"name":"front_mut","qualname":"<LinkedList<A>>::front_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to the first element of the list. If the\n the list is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to the first element of the list. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57027,"byte_end":57102,"line_start":736,"line_end":736,"column_start":5,"column_end":80}},{"value":"/ the list is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57107,"byte_end":57160,"line_start":737,"line_end":737,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57165,"byte_end":57174,"line_start":738,"line_end":738,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57478,"byte_end":57482,"line_start":748,"line_end":748,"column_start":12,"column_end":16},"name":"back","qualname":"<LinkedList<A>>::back","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to the last element of the list. If the list\n is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to the last element of the list. If the list","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57327,"byte_end":57403,"line_start":745,"line_end":745,"column_start":5,"column_end":81}},{"value":"/ is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57408,"byte_end":57452,"line_start":746,"line_end":746,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57457,"byte_end":57466,"line_start":747,"line_end":747,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57757,"byte_end":57765,"line_start":757,"line_end":757,"column_start":12,"column_end":20},"name":"back_mut","qualname":"<LinkedList<A>>::back_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to the last element of the list. If the\n list is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to the last element of the list. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57603,"byte_end":57677,"line_start":754,"line_end":754,"column_start":5,"column_end":79}},{"value":"/ list is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57682,"byte_end":57731,"line_start":755,"line_end":755,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57736,"byte_end":57745,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57981,"byte_end":57985,"line_start":765,"line_end":765,"column_start":12,"column_end":16},"name":"iter","qualname":"<LinkedList<A>>::iter","value":"fn (&self) -> Iter<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the objects in the `LinkedList`.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the objects in the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57897,"byte_end":57955,"line_start":763,"line_end":763,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":57960,"byte_end":57969,"line_start":764,"line_end":764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58420,"byte_end":58425,"line_start":779,"line_end":779,"column_start":12,"column_end":17},"name":"clear","qualname":"<LinkedList<A>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the `LinkedList`.","sig":null,"attributes":[{"value":"/ Removes all elements from the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58128,"byte_end":58175,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58180,"byte_end":58183,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ This will unlink all object currently in the list, which requires","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58188,"byte_end":58257,"line_start":775,"line_end":775,"column_start":5,"column_end":74}},{"value":"/ iterating through all elements in the `LinkedList`. Each element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58262,"byte_end":58333,"line_start":776,"line_end":776,"column_start":5,"column_end":76}},{"value":"/ converted back to an owned pointer and then dropped.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58338,"byte_end":58394,"line_start":777,"line_end":777,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58399,"byte_end":58408,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59197,"byte_end":59207,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"fast_clear","qualname":"<LinkedList<A>>::fast_clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Empties the `LinkedList` without unlinking or freeing objects in it.","sig":null,"attributes":[{"value":"/ Empties the `LinkedList` without unlinking or freeing objects in it.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58823,"byte_end":58895,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58900,"byte_end":58903,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ Since this does not unlink any objects, any attempts to link these","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58908,"byte_end":58978,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/ objects into another `LinkedList` will fail but will not cause any","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":58983,"byte_end":59053,"line_start":796,"line_end":796,"column_start":5,"column_end":75}},{"value":"/ memory unsafety. To unlink those objects manually, you must call the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59058,"byte_end":59130,"line_start":797,"line_end":797,"column_start":5,"column_end":77}},{"value":"/ `force_unlink` function on them.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59135,"byte_end":59171,"line_start":798,"line_end":798,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59176,"byte_end":59185,"line_start":799,"line_end":799,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59427,"byte_end":59431,"line_start":807,"line_end":807,"column_start":12,"column_end":16},"name":"take","qualname":"<LinkedList<A>>::take","value":"fn (&mut self) -> LinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Takes all the elements out of the `LinkedList`, leaving it empty. The\n taken elements are returned as a new `LinkedList`.\n","sig":null,"attributes":[{"value":"/ Takes all the elements out of the `LinkedList`, leaving it empty. The","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59269,"byte_end":59342,"line_start":804,"line_end":804,"column_start":5,"column_end":78}},{"value":"/ taken elements are returned as a new `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59347,"byte_end":59401,"line_start":805,"line_end":805,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59406,"byte_end":59415,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59821,"byte_end":59831,"line_start":823,"line_end":823,"column_start":12,"column_end":22},"name":"push_front","qualname":"<LinkedList<A>>::push_front","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element at the start of the `LinkedList`.\n","sig":null,"attributes":[{"value":"/ Inserts a new element at the start of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59736,"byte_end":59795,"line_start":821,"line_end":821,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59800,"byte_end":59809,"line_start":822,"line_end":822,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60001,"byte_end":60010,"line_start":829,"line_end":829,"column_start":12,"column_end":21},"name":"push_back","qualname":"<LinkedList<A>>::push_back","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element at the end of the `LinkedList`.\n","sig":null,"attributes":[{"value":"/ Inserts a new element at the end of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59918,"byte_end":59975,"line_start":827,"line_end":827,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":59980,"byte_end":59989,"line_start":828,"line_end":828,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60240,"byte_end":60249,"line_start":837,"line_end":837,"column_start":12,"column_end":21},"name":"pop_front","qualname":"<LinkedList<A>>::pop_front","value":"fn (&mut self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the first element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Removes the first element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60098,"byte_end":60148,"line_start":833,"line_end":833,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60153,"byte_end":60156,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the `LinkedList` is empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60161,"byte_end":60214,"line_start":835,"line_end":835,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60219,"byte_end":60228,"line_start":836,"line_end":836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60471,"byte_end":60479,"line_start":845,"line_end":845,"column_start":12,"column_end":20},"name":"pop_back","qualname":"<LinkedList<A>>::pop_back","value":"fn (&mut self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element of the `LinkedList`.","sig":null,"attributes":[{"value":"/ Removes the last element of the `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60330,"byte_end":60379,"line_start":841,"line_end":841,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60384,"byte_end":60387,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the `LinkedList` is empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60392,"byte_end":60445,"line_start":843,"line_end":843,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60450,"byte_end":60459,"line_start":844,"line_end":844,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":62174,"byte_end":62178,"line_start":905,"line_end":905,"column_start":12,"column_end":16},"name":"Iter","qualname":"::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"decl_id":null,"docs":" An iterator over references to the items of a `LinkedList`.\n","sig":null,"attributes":[{"value":"/ An iterator over references to the items of a `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":62099,"byte_end":62162,"line_start":904,"line_end":904,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":251},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":63848,"byte_end":63856,"line_start":962,"line_end":962,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":253}],"decl_id":null,"docs":" An iterator which consumes a `LinkedList`.\n","sig":null,"attributes":[{"value":"/ An iterator which consumes a `LinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":63790,"byte_end":63836,"line_start":961,"line_end":961,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":261},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rbtree","qualname":"::rbtree","value":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":822},{"krate":0,"index":835},{"krate":0,"index":833},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":836},{"krate":0,"index":848},{"krate":0,"index":846},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":318},{"krate":0,"index":323},{"krate":0,"index":327},{"krate":0,"index":337},{"krate":0,"index":342},{"krate":0,"index":356},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":385},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":467},{"krate":0,"index":473},{"krate":0,"index":479},{"krate":0,"index":484},{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":497},{"krate":0,"index":501}],"decl_id":null,"docs":" Intrusive red-black tree.\n","sig":null,"attributes":[{"value":"! Intrusive red-black tree.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":80346,"byte_end":80375,"line_start":8,"line_end":8,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":277},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":80871,"byte_end":80875,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Link","qualname":"::rbtree::Link","value":"Link {  }","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"decl_id":null,"docs":" Intrusive link that allows an object to be inserted into a `RBTree`.\n","sig":null,"attributes":[{"value":"/ Intrusive link that allows an object to be inserted into a `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":80787,"byte_end":80859,"line_start":24,"line_end":24,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81036,"byte_end":81039,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"name":"new","qualname":"<Link>::new","value":"fn () -> Link","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Link`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Link`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":80979,"byte_end":81004,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81009,"byte_end":81018,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81327,"byte_end":81336,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"is_linked","qualname":"<Link>::is_linked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `Link` is linked into a `RBTree`.\n","sig":null,"attributes":[{"value":"/ Checks whether the `Link` is linked into a `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81245,"byte_end":81301,"line_start":42,"line_end":42,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81306,"byte_end":81315,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81810,"byte_end":81822,"line_start":57,"line_end":57,"column_start":19,"column_end":31},"name":"force_unlink","qualname":"<Link>::force_unlink","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlinks an object from a `RBTree`.","sig":null,"attributes":[{"value":"/ Forcibly unlinks an object from a `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81416,"byte_end":81463,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81468,"byte_end":81471,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81476,"byte_end":81488,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81493,"byte_end":81496,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ It is undefined behavior to call this function while still linked into a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81501,"byte_end":81577,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ `RBTree`. The only situation where this function is useful is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81582,"byte_end":81647,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/ after calling `fast_clear` on a `RBTree`, since this clears","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81652,"byte_end":81715,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ the collection without marking the nodes as unlinked.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81720,"byte_end":81777,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81782,"byte_end":81791,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96058,"byte_end":96064,"line_start":508,"line_end":508,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::rbtree::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"decl_id":null,"docs":" A cursor which provides read-only access to a `RBTree`.\n","sig":null,"attributes":[{"value":"/ A cursor which provides read-only access to a `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":95987,"byte_end":96046,"line_start":507,"line_end":507,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96515,"byte_end":96522,"line_start":526,"line_end":526,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Cursor>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the cursor is currently pointing to the null object.\n","sig":null,"attributes":[{"value":"/ Checks if the cursor is currently pointing to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96423,"byte_end":96489,"line_start":524,"line_end":524,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96494,"byte_end":96503,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96795,"byte_end":96798,"line_start":536,"line_end":536,"column_start":12,"column_end":15},"name":"get","qualname":"<Cursor>::get","value":"fn (&self) -> Option<&'a A::Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the object that the cursor is currently\n pointing to.","sig":null,"attributes":[{"value":"/ Returns a reference to the object that the cursor is currently","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96582,"byte_end":96648,"line_start":530,"line_end":530,"column_start":5,"column_end":71}},{"value":"/ pointing to.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96653,"byte_end":96669,"line_start":531,"line_end":531,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96674,"byte_end":96677,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96682,"byte_end":96753,"line_start":533,"line_end":533,"column_start":5,"column_end":76}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96758,"byte_end":96769,"line_start":534,"line_end":534,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96774,"byte_end":96783,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97217,"byte_end":97230,"line_start":550,"line_end":550,"column_start":12,"column_end":25},"name":"clone_pointer","qualname":"<Cursor>::clone_pointer","value":"fn (&self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Clones and returns the pointer that points to the element that the\n cursor is referencing.","sig":null,"attributes":[{"value":"/ Clones and returns the pointer that points to the element that the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96990,"byte_end":97060,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ cursor is referencing.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97065,"byte_end":97091,"line_start":545,"line_end":545,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97096,"byte_end":97099,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97104,"byte_end":97175,"line_start":547,"line_end":547,"column_start":5,"column_end":76}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97180,"byte_end":97191,"line_start":548,"line_end":548,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97196,"byte_end":97205,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97776,"byte_end":97785,"line_start":564,"line_end":564,"column_start":12,"column_end":21},"name":"move_next","qualname":"<Cursor>::move_next","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the next element of the `RBTree`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the next element of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97459,"byte_end":97516,"line_start":558,"line_end":558,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97521,"byte_end":97524,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97529,"byte_end":97602,"line_start":560,"line_end":560,"column_start":5,"column_end":78}},{"value":"/ the first element of the `RBTree`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97607,"byte_end":97675,"line_start":561,"line_end":561,"column_start":5,"column_end":73}},{"value":"/ element of the `RBTree` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97680,"byte_end":97750,"line_start":562,"line_end":562,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97755,"byte_end":97764,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98313,"byte_end":98322,"line_start":578,"line_end":578,"column_start":12,"column_end":21},"name":"move_prev","qualname":"<Cursor>::move_prev","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the previous element of the `RBTree`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the previous element of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":97992,"byte_end":98053,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98058,"byte_end":98061,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98066,"byte_end":98139,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ the last element of the `RBTree`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98144,"byte_end":98212,"line_start":575,"line_end":575,"column_start":5,"column_end":73}},{"value":"/ element of the `RBTree` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98217,"byte_end":98287,"line_start":576,"line_end":576,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98292,"byte_end":98301,"line_start":577,"line_end":577,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98844,"byte_end":98853,"line_start":592,"line_end":592,"column_start":12,"column_end":21},"name":"peek_next","qualname":"<Cursor>::peek_next","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the next element of the `RBTree`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the next element of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98528,"byte_end":98594,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98599,"byte_end":98602,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98607,"byte_end":98680,"line_start":588,"line_end":588,"column_start":5,"column_end":78}},{"value":"/ first element of the `RBTree`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98685,"byte_end":98749,"line_start":589,"line_end":589,"column_start":5,"column_end":69}},{"value":"/ element of the `RBTree` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98754,"byte_end":98818,"line_start":590,"line_end":590,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98823,"byte_end":98832,"line_start":591,"line_end":591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99287,"byte_end":99296,"line_start":604,"line_end":604,"column_start":12,"column_end":21},"name":"peek_prev","qualname":"<Cursor>::peek_prev","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the previous element of the `RBTree`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the previous element of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":98967,"byte_end":99037,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99042,"byte_end":99045,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99050,"byte_end":99123,"line_start":600,"line_end":600,"column_start":5,"column_end":78}},{"value":"/ last element of the `RBTree`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99128,"byte_end":99192,"line_start":601,"line_end":601,"column_start":5,"column_end":69}},{"value":"/ element of the `RBTree` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99197,"byte_end":99261,"line_start":602,"line_end":602,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99266,"byte_end":99275,"line_start":603,"line_end":603,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99477,"byte_end":99486,"line_start":612,"line_end":612,"column_start":12,"column_end":21},"name":"CursorMut","qualname":"::rbtree::CursorMut","value":"CursorMut {  }","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"decl_id":null,"docs":" A cursor which provides mutable access to a `RBTree`.\n","sig":null,"attributes":[{"value":"/ A cursor which provides mutable access to a `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99408,"byte_end":99465,"line_start":611,"line_end":611,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99726,"byte_end":99733,"line_start":620,"line_end":620,"column_start":12,"column_end":19},"name":"is_null","qualname":"<CursorMut>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the cursor is currently pointing to the null object.\n","sig":null,"attributes":[{"value":"/ Checks if the cursor is currently pointing to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99634,"byte_end":99700,"line_start":618,"line_end":618,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99705,"byte_end":99714,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100004,"byte_end":100007,"line_start":630,"line_end":630,"column_start":12,"column_end":15},"name":"get","qualname":"<CursorMut>::get","value":"fn (&self) -> Option<&A::Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the object that the cursor is currently\n pointing to.","sig":null,"attributes":[{"value":"/ Returns a reference to the object that the cursor is currently","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99793,"byte_end":99859,"line_start":624,"line_end":624,"column_start":5,"column_end":71}},{"value":"/ pointing to.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99864,"byte_end":99880,"line_start":625,"line_end":625,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99885,"byte_end":99888,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ This returns None if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99893,"byte_end":99962,"line_start":627,"line_end":627,"column_start":5,"column_end":74}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99967,"byte_end":99978,"line_start":628,"line_end":628,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99983,"byte_end":99992,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100507,"byte_end":100516,"line_start":644,"line_end":644,"column_start":12,"column_end":21},"name":"as_cursor","qualname":"<CursorMut>::as_cursor","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a read-only cursor pointing to the current element.","sig":null,"attributes":[{"value":"/ Returns a read-only cursor pointing to the current element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100196,"byte_end":100259,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100264,"byte_end":100267,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned `Cursor` is bound to that of the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100272,"byte_end":100337,"line_start":640,"line_end":640,"column_start":5,"column_end":70}},{"value":"/ `CursorMut`, which means it cannot outlive the `CursorMut` and that the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100342,"byte_end":100417,"line_start":641,"line_end":641,"column_start":5,"column_end":80}},{"value":"/ `CursorMut` is frozen for the lifetime of the `Cursor`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100422,"byte_end":100481,"line_start":642,"line_end":642,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100486,"byte_end":100495,"line_start":643,"line_end":643,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100962,"byte_end":100971,"line_start":657,"line_end":657,"column_start":12,"column_end":21},"name":"move_next","qualname":"<CursorMut>::move_next","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the next element of the `RBTree`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the next element of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100645,"byte_end":100702,"line_start":651,"line_end":651,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100707,"byte_end":100710,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100715,"byte_end":100788,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"/ the first element of the `RBTree`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100793,"byte_end":100861,"line_start":654,"line_end":654,"column_start":5,"column_end":73}},{"value":"/ element of the `RBTree` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100866,"byte_end":100936,"line_start":655,"line_end":655,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":100941,"byte_end":100950,"line_start":656,"line_end":656,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101499,"byte_end":101508,"line_start":671,"line_end":671,"column_start":12,"column_end":21},"name":"move_prev","qualname":"<CursorMut>::move_prev","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the previous element of the `RBTree`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the previous element of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101178,"byte_end":101239,"line_start":665,"line_end":665,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101244,"byte_end":101247,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101252,"byte_end":101325,"line_start":667,"line_end":667,"column_start":5,"column_end":78}},{"value":"/ the last element of the `RBTree`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101330,"byte_end":101398,"line_start":668,"line_end":668,"column_start":5,"column_end":73}},{"value":"/ element of the `RBTree` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101403,"byte_end":101473,"line_start":669,"line_end":669,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101478,"byte_end":101487,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102030,"byte_end":102039,"line_start":685,"line_end":685,"column_start":12,"column_end":21},"name":"peek_next","qualname":"<CursorMut>::peek_next","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the next element of the `RBTree`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the next element of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101714,"byte_end":101780,"line_start":679,"line_end":679,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101785,"byte_end":101788,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101793,"byte_end":101866,"line_start":681,"line_end":681,"column_start":5,"column_end":78}},{"value":"/ first element of the `RBTree`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101871,"byte_end":101935,"line_start":682,"line_end":682,"column_start":5,"column_end":69}},{"value":"/ element of the `RBTree` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":101940,"byte_end":102004,"line_start":683,"line_end":683,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102009,"byte_end":102018,"line_start":684,"line_end":684,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102477,"byte_end":102486,"line_start":697,"line_end":697,"column_start":12,"column_end":21},"name":"peek_prev","qualname":"<CursorMut>::peek_prev","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the previous element of the `RBTree`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the previous element of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102157,"byte_end":102227,"line_start":691,"line_end":691,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102232,"byte_end":102235,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102240,"byte_end":102313,"line_start":693,"line_end":693,"column_start":5,"column_end":78}},{"value":"/ last element of the `RBTree`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102318,"byte_end":102382,"line_start":694,"line_end":694,"column_start":5,"column_end":69}},{"value":"/ element of the `RBTree` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102387,"byte_end":102451,"line_start":695,"line_end":695,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102456,"byte_end":102465,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102959,"byte_end":102965,"line_start":711,"line_end":711,"column_start":12,"column_end":18},"name":"remove","qualname":"<CursorMut>::remove","value":"fn (&mut self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the current element from the `RBTree`.","sig":null,"attributes":[{"value":"/ Removes the current element from the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102604,"byte_end":102654,"line_start":703,"line_end":703,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102659,"byte_end":102662,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ A pointer to the element that was removed is returned, and the cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102667,"byte_end":102743,"line_start":705,"line_end":705,"column_start":5,"column_end":81}},{"value":"/ moved to point to the next element in the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102748,"byte_end":102803,"line_start":706,"line_end":706,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102808,"byte_end":102811,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ If the cursor is currently pointing to the null object then no element","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102816,"byte_end":102890,"line_start":708,"line_end":708,"column_start":5,"column_end":79}},{"value":"/ is removed and `None` is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102895,"byte_end":102933,"line_start":709,"line_end":709,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":102938,"byte_end":102947,"line_start":710,"line_end":710,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104164,"byte_end":104176,"line_start":743,"line_end":743,"column_start":12,"column_end":24},"name":"replace_with","qualname":"<CursorMut>::replace_with","value":"fn (&mut self, val: A::Pointer) -> Result<A::Pointer, A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the current element from the `RBTree` and inserts another\n object in its place.","sig":null,"attributes":[{"value":"/ Removes the current element from the `RBTree` and inserts another","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103362,"byte_end":103431,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ object in its place.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103436,"byte_end":103460,"line_start":725,"line_end":725,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103465,"byte_end":103468,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ A pointer to the element that was removed is returned, and the cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103473,"byte_end":103549,"line_start":727,"line_end":727,"column_start":5,"column_end":81}},{"value":"/ modified to point to the newly added element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103554,"byte_end":103603,"line_start":728,"line_end":728,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103608,"byte_end":103611,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ When using this function you must ensure that the elements in the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103616,"byte_end":103685,"line_start":730,"line_end":730,"column_start":5,"column_end":74}},{"value":"/ collection are maintained in increasing order. Failure to do this may","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103690,"byte_end":103763,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ lead to `find`, `upper_bound`, `lower_bound` and `range` returning","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103768,"byte_end":103838,"line_start":732,"line_end":732,"column_start":5,"column_end":75}},{"value":"/ incorrect results.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103843,"byte_end":103865,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103870,"byte_end":103873,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If the cursor is currently pointing to the null object then an error is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103878,"byte_end":103953,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/ returned containing the given `val` parameter.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":103958,"byte_end":104008,"line_start":736,"line_end":736,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104013,"byte_end":104016,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104021,"byte_end":104033,"line_start":738,"line_end":738,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104038,"byte_end":104041,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104046,"byte_end":104118,"line_start":740,"line_end":740,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104123,"byte_end":104138,"line_start":741,"line_end":741,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104143,"byte_end":104152,"line_start":742,"line_end":742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105228,"byte_end":105240,"line_start":771,"line_end":771,"column_start":12,"column_end":24},"name":"insert_after","qualname":"<CursorMut>::insert_after","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `RBTree` after the current one.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `RBTree` after the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104612,"byte_end":104678,"line_start":756,"line_end":756,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104683,"byte_end":104686,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ When using this function you must ensure that the elements in the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104691,"byte_end":104760,"line_start":758,"line_end":758,"column_start":5,"column_end":74}},{"value":"/ collection are maintained in increasing order. Failure to do this may","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104765,"byte_end":104838,"line_start":759,"line_end":759,"column_start":5,"column_end":78}},{"value":"/ lead to `find`, `upper_bound`, `lower_bound` and `range` returning","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104843,"byte_end":104913,"line_start":760,"line_end":760,"column_start":5,"column_end":75}},{"value":"/ incorrect results.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104918,"byte_end":104940,"line_start":761,"line_end":761,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104945,"byte_end":104948,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":104953,"byte_end":105025,"line_start":763,"line_end":763,"column_start":5,"column_end":77}},{"value":"/ inserted at the start of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105030,"byte_end":105072,"line_start":764,"line_end":764,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105077,"byte_end":105080,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105085,"byte_end":105097,"line_start":766,"line_end":766,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105102,"byte_end":105105,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105110,"byte_end":105182,"line_start":768,"line_end":768,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105187,"byte_end":105202,"line_start":769,"line_end":769,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105207,"byte_end":105216,"line_start":770,"line_end":770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106480,"byte_end":106493,"line_start":804,"line_end":804,"column_start":12,"column_end":25},"name":"insert_before","qualname":"<CursorMut>::insert_before","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `RBTree` before the current one.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `RBTree` before the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105865,"byte_end":105932,"line_start":789,"line_end":789,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105937,"byte_end":105940,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ When using this function you must ensure that the elements in the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":105945,"byte_end":106014,"line_start":791,"line_end":791,"column_start":5,"column_end":74}},{"value":"/ collection are maintained in increasing order. Failure to do this may","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106019,"byte_end":106092,"line_start":792,"line_end":792,"column_start":5,"column_end":78}},{"value":"/ lead to `find`, `upper_bound`, `lower_bound` and `range` returning","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106097,"byte_end":106167,"line_start":793,"line_end":793,"column_start":5,"column_end":75}},{"value":"/ incorrect results.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106172,"byte_end":106194,"line_start":794,"line_end":794,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106199,"byte_end":106202,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106207,"byte_end":106279,"line_start":796,"line_end":796,"column_start":5,"column_end":77}},{"value":"/ inserted at the end of the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106284,"byte_end":106324,"line_start":797,"line_end":797,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106329,"byte_end":106332,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106337,"byte_end":106349,"line_start":799,"line_end":799,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106354,"byte_end":106357,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106362,"byte_end":106434,"line_start":801,"line_end":801,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106439,"byte_end":106454,"line_start":802,"line_end":802,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":106459,"byte_end":106468,"line_start":803,"line_end":803,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107541,"byte_end":107547,"line_start":834,"line_end":834,"column_start":12,"column_end":18},"name":"insert","qualname":"<CursorMut>::insert","value":"fn <'c> (&'c mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `RBTree`.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107187,"byte_end":107231,"line_start":824,"line_end":824,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107236,"byte_end":107239,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The new element will be inserted at the correct position in the tree","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107244,"byte_end":107316,"line_start":826,"line_end":826,"column_start":5,"column_end":77}},{"value":"/ based on its key, regardless of the current cursor position.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107321,"byte_end":107385,"line_start":827,"line_end":827,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107390,"byte_end":107393,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107398,"byte_end":107410,"line_start":829,"line_end":829,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107415,"byte_end":107418,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107423,"byte_end":107495,"line_start":831,"line_end":831,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107500,"byte_end":107515,"line_start":832,"line_end":832,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107520,"byte_end":107529,"line_start":833,"line_end":833,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108624,"byte_end":108630,"line_start":859,"line_end":859,"column_start":12,"column_end":18},"name":"RBTree","qualname":"::rbtree::RBTree","value":"RBTree {  }","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":" An intrusive red-black tree.","sig":null,"attributes":[{"value":"/ An intrusive red-black tree.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107997,"byte_end":108029,"line_start":848,"line_end":848,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108030,"byte_end":108033,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ When this collection is dropped, all elements linked into it will be","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108034,"byte_end":108106,"line_start":850,"line_end":850,"column_start":1,"column_end":73}},{"value":"/ converted back to owned pointers and dropped.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108107,"byte_end":108156,"line_start":851,"line_end":851,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108157,"byte_end":108160,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ Note that you are responsible for ensuring that the elements in a `RBTree`","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108161,"byte_end":108239,"line_start":853,"line_end":853,"column_start":1,"column_end":79}},{"value":"/ remain in ascending key order. This property can be violated, either because","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108240,"byte_end":108320,"line_start":854,"line_end":854,"column_start":1,"column_end":81}},{"value":"/ the key of an element was modified, or because the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108321,"byte_end":108375,"line_start":855,"line_end":855,"column_start":1,"column_end":55}},{"value":"/ `insert_before`/`insert_after` methods of `CursorMut` were incorrectly used.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108376,"byte_end":108456,"line_start":856,"line_end":856,"column_start":1,"column_end":81}},{"value":"/ If this situation occurs, memory safety will not be violated but the `find`,","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108457,"byte_end":108537,"line_start":857,"line_end":857,"column_start":1,"column_end":81}},{"value":"/ `upper_bound`, `lower_bound` and `range` may return incorrect results.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108538,"byte_end":108612,"line_start":858,"line_end":858,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109395,"byte_end":109398,"line_start":889,"line_end":889,"column_start":12,"column_end":15},"name":"new","qualname":"<RBTree<A>>::new","value":"fn (adapter: A) -> RBTree<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `RBTree`.\n","sig":null,"attributes":[{"value":"/ Creates an empty `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109302,"byte_end":109332,"line_start":886,"line_end":886,"column_start":5,"column_end":35}},{"value":"cfg(not (feature = \"nightly\"))","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109337,"byte_end":109369,"line_start":887,"line_end":887,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109374,"byte_end":109383,"line_start":888,"line_end":888,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109590,"byte_end":109598,"line_start":898,"line_end":898,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RBTree<A>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `RBTree` is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `RBTree` is empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109520,"byte_end":109564,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109569,"byte_end":109578,"line_start":897,"line_end":897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109723,"byte_end":109729,"line_start":904,"line_end":904,"column_start":12,"column_end":18},"name":"cursor","qualname":"<RBTree<A>>::cursor","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a null `Cursor` for this tree.\n","sig":null,"attributes":[{"value":"/ Returns a null `Cursor` for this tree.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109655,"byte_end":109697,"line_start":902,"line_end":902,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109702,"byte_end":109711,"line_start":903,"line_end":903,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109927,"byte_end":109937,"line_start":913,"line_end":913,"column_start":12,"column_end":22},"name":"cursor_mut","qualname":"<RBTree<A>>::cursor_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a null `CursorMut` for this tree.\n","sig":null,"attributes":[{"value":"/ Returns a null `CursorMut` for this tree.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109856,"byte_end":109901,"line_start":911,"line_end":911,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":109906,"byte_end":109915,"line_start":912,"line_end":912,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110264,"byte_end":110279,"line_start":926,"line_end":926,"column_start":19,"column_end":34},"name":"cursor_from_ptr","qualname":"<RBTree<A>>::cursor_from_ptr","value":"fn (&self, ptr: *const A::Value) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Cursor` from a pointer to an element.","sig":null,"attributes":[{"value":"/ Creates a `Cursor` from a pointer to an element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110074,"byte_end":110126,"line_start":920,"line_end":920,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110131,"byte_end":110134,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110139,"byte_end":110151,"line_start":922,"line_end":922,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110156,"byte_end":110159,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this tree.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110164,"byte_end":110231,"line_start":924,"line_end":924,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110236,"byte_end":110245,"line_start":925,"line_end":925,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110641,"byte_end":110660,"line_start":939,"line_end":939,"column_start":19,"column_end":38},"name":"cursor_mut_from_ptr","qualname":"<RBTree<A>>::cursor_mut_from_ptr","value":"fn (&mut self, ptr: *const A::Value) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CursorMut` from a pointer to an element.","sig":null,"attributes":[{"value":"/ Creates a `CursorMut` from a pointer to an element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110448,"byte_end":110503,"line_start":933,"line_end":933,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110508,"byte_end":110511,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110516,"byte_end":110528,"line_start":935,"line_end":935,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110533,"byte_end":110536,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this tree.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110541,"byte_end":110608,"line_start":937,"line_end":937,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110613,"byte_end":110622,"line_start":938,"line_end":938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110991,"byte_end":110996,"line_start":949,"line_end":949,"column_start":12,"column_end":17},"name":"front","qualname":"<RBTree<A>>::front","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to the first element of the tree. If the\n tree is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to the first element of the tree. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110839,"byte_end":110911,"line_start":946,"line_end":946,"column_start":5,"column_end":77}},{"value":"/ tree is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110916,"byte_end":110965,"line_start":947,"line_end":947,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":110970,"byte_end":110979,"line_start":948,"line_end":948,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111276,"byte_end":111285,"line_start":958,"line_end":958,"column_start":12,"column_end":21},"name":"front_mut","qualname":"<RBTree<A>>::front_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to the first element of the tree. If the\n the tree is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to the first element of the tree. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111117,"byte_end":111192,"line_start":955,"line_end":955,"column_start":5,"column_end":80}},{"value":"/ the tree is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111197,"byte_end":111250,"line_start":956,"line_end":956,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111255,"byte_end":111264,"line_start":957,"line_end":957,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111568,"byte_end":111572,"line_start":967,"line_end":967,"column_start":12,"column_end":16},"name":"back","qualname":"<RBTree<A>>::back","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to the last element of the tree. If the tree\n is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to the last element of the tree. If the tree","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111417,"byte_end":111493,"line_start":964,"line_end":964,"column_start":5,"column_end":81}},{"value":"/ is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111498,"byte_end":111542,"line_start":965,"line_end":965,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111547,"byte_end":111556,"line_start":966,"line_end":966,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111847,"byte_end":111855,"line_start":976,"line_end":976,"column_start":12,"column_end":20},"name":"back_mut","qualname":"<RBTree<A>>::back_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to the last element of the tree. If the\n tree is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to the last element of the tree. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111693,"byte_end":111767,"line_start":973,"line_end":973,"column_start":5,"column_end":79}},{"value":"/ tree is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111772,"byte_end":111821,"line_start":974,"line_end":974,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":111826,"byte_end":111835,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":112343,"byte_end":112347,"line_start":993,"line_end":993,"column_start":12,"column_end":16},"name":"iter","qualname":"<RBTree<A>>::iter","value":"fn (&self) -> Iter<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the objects in the `RBTree`, in ascending key\n order.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the objects in the `RBTree`, in ascending key","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":112231,"byte_end":112302,"line_start":990,"line_end":990,"column_start":5,"column_end":76}},{"value":"/ order.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":112307,"byte_end":112317,"line_start":991,"line_end":991,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":112322,"byte_end":112331,"line_start":992,"line_end":992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113613,"byte_end":113618,"line_start":1030,"line_end":1030,"column_start":12,"column_end":17},"name":"clear","qualname":"<RBTree<A>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the `RBTree`.","sig":null,"attributes":[{"value":"/ Removes all elements from the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113329,"byte_end":113372,"line_start":1024,"line_end":1024,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113377,"byte_end":113380,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This will unlink all object currently in the tree, which requires","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113385,"byte_end":113454,"line_start":1026,"line_end":1026,"column_start":5,"column_end":74}},{"value":"/ iterating through all elements in the `RBTree`. Each element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113459,"byte_end":113526,"line_start":1027,"line_end":1027,"column_start":5,"column_end":72}},{"value":"/ converted back to an owned pointer and then dropped.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113531,"byte_end":113587,"line_start":1028,"line_end":1028,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113592,"byte_end":113601,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":114110,"byte_end":114120,"line_start":1043,"line_end":1043,"column_start":12,"column_end":22},"name":"fast_clear","qualname":"<RBTree<A>>::fast_clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Empties the `RBTree` without unlinking or freeing objects in it.","sig":null,"attributes":[{"value":"/ Empties the `RBTree` without unlinking or freeing objects in it.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113744,"byte_end":113812,"line_start":1036,"line_end":1036,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113817,"byte_end":113820,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Since this does not unlink any objects, any attempts to link these","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113825,"byte_end":113895,"line_start":1038,"line_end":1038,"column_start":5,"column_end":75}},{"value":"/ objects into another `RBTree` will fail but will not cause any","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113900,"byte_end":113966,"line_start":1039,"line_end":1039,"column_start":5,"column_end":71}},{"value":"/ memory unsafety. To unlink those objects manually, you must call the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":113971,"byte_end":114043,"line_start":1040,"line_end":1040,"column_start":5,"column_end":77}},{"value":"/ `force_unlink` function on them.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":114048,"byte_end":114084,"line_start":1041,"line_end":1041,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":114089,"byte_end":114098,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":114332,"byte_end":114336,"line_start":1050,"line_end":1050,"column_start":12,"column_end":16},"name":"take","qualname":"<RBTree<A>>::take","value":"fn (&mut self) -> RBTree<A>","parent":null,"children":[],"decl_id":null,"docs":" Takes all the elements out of the `RBTree`, leaving it empty. The\n taken elements are returned as a new `RBTree`.\n","sig":null,"attributes":[{"value":"/ Takes all the elements out of the `RBTree`, leaving it empty. The","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":114182,"byte_end":114251,"line_start":1047,"line_end":1047,"column_start":5,"column_end":74}},{"value":"/ taken elements are returned as a new `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":114256,"byte_end":114306,"line_start":1048,"line_end":1048,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":114311,"byte_end":114320,"line_start":1049,"line_end":1049,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115507,"byte_end":115511,"line_start":1088,"line_end":1088,"column_start":12,"column_end":16},"name":"find","qualname":"<RBTree<A>>::find","value":"fn <'a, Q> (&'a self, key: &Q) -> Cursor<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to an element with the given key. If no such\n element is found then a null cursor is returned.","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to an element with the given key. If no such","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115236,"byte_end":115312,"line_start":1082,"line_end":1082,"column_start":5,"column_end":81}},{"value":"/ element is found then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115317,"byte_end":115369,"line_start":1083,"line_end":1083,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115374,"byte_end":115377,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ If multiple elements with an identical key are found then an arbitrary","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115382,"byte_end":115456,"line_start":1085,"line_end":1085,"column_start":5,"column_end":79}},{"value":"/ one is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115461,"byte_end":115481,"line_start":1086,"line_end":1086,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115486,"byte_end":115495,"line_start":1087,"line_end":1087,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":116014,"byte_end":116022,"line_start":1104,"line_end":1104,"column_start":12,"column_end":20},"name":"find_mut","qualname":"<RBTree<A>>::find_mut","value":"fn <'a, Q> (&'a mut self, key: &Q) -> CursorMut<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to an element with the given key. If no\n such element is found then a null cursor is returned.","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to an element with the given key. If no","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115740,"byte_end":115814,"line_start":1098,"line_end":1098,"column_start":5,"column_end":79}},{"value":"/ such element is found then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115819,"byte_end":115876,"line_start":1099,"line_end":1099,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115881,"byte_end":115884,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ If multiple elements with an identical key are found then an arbitrary","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115889,"byte_end":115963,"line_start":1101,"line_end":1101,"column_start":5,"column_end":79}},{"value":"/ one is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115968,"byte_end":115988,"line_start":1102,"line_end":1102,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":115993,"byte_end":116002,"line_start":1103,"line_end":1103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117276,"byte_end":117287,"line_start":1143,"line_end":1143,"column_start":12,"column_end":23},"name":"lower_bound","qualname":"<RBTree<A>>::lower_bound","value":"fn <'a, Q> (&'a self, bound: Bound<&Q>) -> Cursor<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to the lowest element whose key is above\n the given bound. If no such element is found then a null cursor is\n returned.\n","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to the lowest element whose key is above","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117085,"byte_end":117157,"line_start":1139,"line_end":1139,"column_start":5,"column_end":77}},{"value":"/ the given bound. If no such element is found then a null cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117162,"byte_end":117232,"line_start":1140,"line_end":1140,"column_start":5,"column_end":75}},{"value":"/ returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117237,"byte_end":117250,"line_start":1141,"line_end":1141,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117255,"byte_end":117264,"line_start":1142,"line_end":1142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117727,"byte_end":117742,"line_start":1157,"line_end":1157,"column_start":12,"column_end":27},"name":"lower_bound_mut","qualname":"<RBTree<A>>::lower_bound_mut","value":"fn <'a, Q> (&'a mut self, bound: Bound<&Q>) -> CursorMut<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to the first element whose key is\n above the given bound. If no such element is found then a null\n cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to the first element whose key is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117534,"byte_end":117602,"line_start":1153,"line_end":1153,"column_start":5,"column_end":73}},{"value":"/ above the given bound. If no such element is found then a null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117607,"byte_end":117673,"line_start":1154,"line_end":1154,"column_start":5,"column_end":71}},{"value":"/ cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117678,"byte_end":117701,"line_start":1155,"line_end":1155,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":117706,"byte_end":117715,"line_start":1156,"line_end":1156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119013,"byte_end":119024,"line_start":1196,"line_end":1196,"column_start":12,"column_end":23},"name":"upper_bound","qualname":"<RBTree<A>>::upper_bound","value":"fn <'a, Q> (&'a self, bound: Bound<&Q>) -> Cursor<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to the last element whose key is below\n the given bound. If no such element is found then a null cursor is\n returned.\n","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to the last element whose key is below","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":118824,"byte_end":118894,"line_start":1192,"line_end":1192,"column_start":5,"column_end":75}},{"value":"/ the given bound. If no such element is found then a null cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":118899,"byte_end":118969,"line_start":1193,"line_end":1193,"column_start":5,"column_end":75}},{"value":"/ returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":118974,"byte_end":118987,"line_start":1194,"line_end":1194,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":118992,"byte_end":119001,"line_start":1195,"line_end":1195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119463,"byte_end":119478,"line_start":1210,"line_end":1210,"column_start":12,"column_end":27},"name":"upper_bound_mut","qualname":"<RBTree<A>>::upper_bound_mut","value":"fn <'a, Q> (&'a mut self, bound: Bound<&Q>) -> CursorMut<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to the last element whose key is\n below the given bound. If no such element is found then a null\n cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to the last element whose key is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119271,"byte_end":119338,"line_start":1206,"line_end":1206,"column_start":5,"column_end":72}},{"value":"/ below the given bound. If no such element is found then a null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119343,"byte_end":119409,"line_start":1207,"line_end":1207,"column_start":5,"column_end":71}},{"value":"/ cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119414,"byte_end":119437,"line_start":1208,"line_end":1208,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119442,"byte_end":119451,"line_start":1209,"line_end":1209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":120124,"byte_end":120130,"line_start":1232,"line_end":1232,"column_start":12,"column_end":18},"name":"insert","qualname":"<RBTree<A>>::insert","value":"fn <'a> (&'a mut self, val: A::Pointer) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `RBTree`.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119735,"byte_end":119779,"line_start":1220,"line_end":1220,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119784,"byte_end":119787,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ The new element will be inserted at the correct position in the tree","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119792,"byte_end":119864,"line_start":1222,"line_end":1222,"column_start":5,"column_end":77}},{"value":"/ based on its key.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119869,"byte_end":119890,"line_start":1223,"line_end":1223,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119895,"byte_end":119898,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable cursor pointing to the newly added element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119903,"byte_end":119968,"line_start":1225,"line_end":1225,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119973,"byte_end":119976,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119981,"byte_end":119993,"line_start":1227,"line_end":1227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":119998,"byte_end":120001,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":120006,"byte_end":120078,"line_start":1229,"line_end":1229,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":120083,"byte_end":120098,"line_start":1230,"line_end":1230,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":120103,"byte_end":120112,"line_start":1231,"line_end":1231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121966,"byte_end":121971,"line_start":1281,"line_end":1281,"column_start":12,"column_end":17},"name":"entry","qualname":"<RBTree<A>>::entry","value":"fn <'a, Q> (&'a mut self, key: &Q) -> Entry<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Entry` for the given key which contains a `CursorMut` to an\n element with the given key or an `InsertCursor` which points to a place\n in which to insert a new element with the given key.","sig":null,"attributes":[{"value":"/ Returns an `Entry` for the given key which contains a `CursorMut` to an","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121415,"byte_end":121490,"line_start":1270,"line_end":1270,"column_start":5,"column_end":80}},{"value":"/ element with the given key or an `InsertCursor` which points to a place","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121495,"byte_end":121570,"line_start":1271,"line_end":1271,"column_start":5,"column_end":80}},{"value":"/ in which to insert a new element with the given key.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121575,"byte_end":121631,"line_start":1272,"line_end":1272,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121636,"byte_end":121639,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ This is more efficient than calling `find` followed by `insert` since","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121644,"byte_end":121717,"line_start":1274,"line_end":1274,"column_start":5,"column_end":78}},{"value":"/ the tree does not have to be searched a second time to find a place to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121722,"byte_end":121796,"line_start":1275,"line_end":1275,"column_start":5,"column_end":79}},{"value":"/ insert the new element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121801,"byte_end":121828,"line_start":1276,"line_end":1276,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121833,"byte_end":121836,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ If multiple elements with an identical key are found then an arbitrary","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121841,"byte_end":121915,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ one is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121920,"byte_end":121940,"line_start":1279,"line_end":1279,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":121945,"byte_end":121954,"line_start":1280,"line_end":1280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":124284,"byte_end":124289,"line_start":1337,"line_end":1337,"column_start":12,"column_end":17},"name":"range","qualname":"<RBTree<A>>::range","value":"fn <'a, Min, Max> (&'a self, min: Bound<&Min>, max: Bound<&Max>) -> Iter<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a double-ended iterator over a sub-range of elements in the\n tree, starting at min, and ending at max. If min is `Unbounded`, then it\n will be treated as \"negative infinity\", and if max is `Unbounded`, then\n it will be treated as \"positive infinity\". Thus\n `range(Unbounded, Unbounded)` will yield the whole collection.\n","sig":null,"attributes":[{"value":"/ Constructs a double-ended iterator over a sub-range of elements in the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":123896,"byte_end":123970,"line_start":1331,"line_end":1331,"column_start":5,"column_end":79}},{"value":"/ tree, starting at min, and ending at max. If min is `Unbounded`, then it","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":123975,"byte_end":124051,"line_start":1332,"line_end":1332,"column_start":5,"column_end":81}},{"value":"/ will be treated as \"negative infinity\", and if max is `Unbounded`, then","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":124056,"byte_end":124131,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ it will be treated as \"positive infinity\". Thus","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":124136,"byte_end":124187,"line_start":1334,"line_end":1334,"column_start":5,"column_end":56}},{"value":"/ `range(Unbounded, Unbounded)` will yield the whole collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":124192,"byte_end":124258,"line_start":1335,"line_end":1335,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":124263,"byte_end":124272,"line_start":1336,"line_end":1336,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127200,"byte_end":127212,"line_start":1435,"line_end":1435,"column_start":12,"column_end":24},"name":"InsertCursor","qualname":"::rbtree::InsertCursor","value":"InsertCursor {  }","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" A cursor pointing to a slot in which an element can be inserted into a\n `RBTree`.\n","sig":null,"attributes":[{"value":"/ A cursor pointing to a slot in which an element can be inserted into a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127100,"byte_end":127174,"line_start":1433,"line_end":1433,"column_start":1,"column_end":75}},{"value":"/ `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127175,"byte_end":127188,"line_start":1434,"line_end":1434,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127628,"byte_end":127634,"line_start":1449,"line_end":1449,"column_start":12,"column_end":18},"name":"insert","qualname":"<InsertCursor>::insert","value":"fn (self, val: A::Pointer) -> CursorMut<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `RBTree` at the location indicated by\n this `InsertCursor`.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `RBTree` at the location indicated by","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127385,"byte_end":127457,"line_start":1442,"line_end":1442,"column_start":5,"column_end":77}},{"value":"/ this `InsertCursor`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127462,"byte_end":127486,"line_start":1443,"line_end":1443,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127491,"byte_end":127494,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127499,"byte_end":127511,"line_start":1445,"line_end":1445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127516,"byte_end":127519,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127524,"byte_end":127596,"line_start":1447,"line_end":1447,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127601,"byte_end":127616,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":461},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128326,"byte_end":128334,"line_start":1472,"line_end":1472,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::rbtree::Entry::Occupied","value":"Entry::Occupied(CursorMut<'a, A>)","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128299,"byte_end":128321,"line_start":1471,"line_end":1471,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":464},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128383,"byte_end":128389,"line_start":1475,"line_end":1475,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::rbtree::Entry::Vacant","value":"Entry::Vacant(InsertCursor<'a, A>)","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128359,"byte_end":128378,"line_start":1474,"line_end":1474,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":458},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128253,"byte_end":128258,"line_start":1470,"line_end":1470,"column_start":10,"column_end":15},"name":"Entry","qualname":"::rbtree::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":464}],"decl_id":null,"docs":" An entry in a `RBTree`.","sig":null,"attributes":[{"value":"/ An entry in a `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128165,"byte_end":128192,"line_start":1467,"line_end":1467,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128193,"byte_end":128196,"line_start":1468,"line_end":1468,"column_start":1,"column_end":4}},{"value":"/ See the documentation for `RBTree::entry`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128197,"byte_end":128243,"line_start":1469,"line_end":1469,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128850,"byte_end":128859,"line_start":1487,"line_end":1487,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, val: A::Pointer) -> CursorMut<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an element into the `RBTree` if the entry is vacant, returning\n a `CursorMut` to the resulting value. If the entry is occupied then a\n `CursorMut` pointing to the element is returned.","sig":null,"attributes":[{"value":"/ Inserts an element into the `RBTree` if the entry is vacant, returning","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128473,"byte_end":128547,"line_start":1479,"line_end":1479,"column_start":5,"column_end":79}},{"value":"/ a `CursorMut` to the resulting value. If the entry is occupied then a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128552,"byte_end":128625,"line_start":1480,"line_end":1480,"column_start":5,"column_end":78}},{"value":"/ `CursorMut` pointing to the element is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128630,"byte_end":128682,"line_start":1481,"line_end":1481,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128687,"byte_end":128690,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128695,"byte_end":128707,"line_start":1483,"line_end":1483,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128712,"byte_end":128715,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ Panics if the `Entry` is vacant and the new element is already linked to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128720,"byte_end":128796,"line_start":1485,"line_end":1485,"column_start":5,"column_end":81}},{"value":"/ a different intrusive collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128801,"byte_end":128838,"line_start":1486,"line_end":1486,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129494,"byte_end":129508,"line_start":1503,"line_end":1503,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> CursorMut<'a, A>","parent":null,"children":[],"decl_id":null,"docs":" Calls the given function and inserts the result into the `RBTree` if the\n entry is vacant, returning a `CursorMut` to the resulting value. If the\n entry is occupied then a `CursorMut` pointing to the element is\n returned and the function is not executed.","sig":null,"attributes":[{"value":"/ Calls the given function and inserts the result into the `RBTree` if the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129047,"byte_end":129123,"line_start":1494,"line_end":1494,"column_start":5,"column_end":81}},{"value":"/ entry is vacant, returning a `CursorMut` to the resulting value. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129128,"byte_end":129203,"line_start":1495,"line_end":1495,"column_start":5,"column_end":80}},{"value":"/ entry is occupied then a `CursorMut` pointing to the element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129208,"byte_end":129275,"line_start":1496,"line_end":1496,"column_start":5,"column_end":72}},{"value":"/ returned and the function is not executed.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129280,"byte_end":129326,"line_start":1497,"line_end":1497,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129331,"byte_end":129334,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129339,"byte_end":129351,"line_start":1499,"line_end":1499,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129356,"byte_end":129359,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ Panics if the `Entry` is vacant and the new element is already linked to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129364,"byte_end":129440,"line_start":1501,"line_end":1501,"column_start":5,"column_end":81}},{"value":"/ a different intrusive collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129445,"byte_end":129482,"line_start":1502,"line_end":1502,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":473},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129989,"byte_end":129993,"line_start":1519,"line_end":1519,"column_start":12,"column_end":16},"name":"Iter","qualname":"::rbtree::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"decl_id":null,"docs":" An iterator over references to the items of a `RBTree`.\n","sig":null,"attributes":[{"value":"/ An iterator over references to the items of a `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":129918,"byte_end":129977,"line_start":1518,"line_end":1518,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":131655,"byte_end":131663,"line_start":1576,"line_end":1576,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::rbtree::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"decl_id":null,"docs":" An iterator which consumes a `RBTree`.\n","sig":null,"attributes":[{"value":"/ An iterator which consumes a `RBTree`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":131601,"byte_end":131643,"line_start":1575,"line_end":1575,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":504},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"singly_linked_list","qualname":"::singly_linked_list","value":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":849},{"krate":0,"index":861},{"krate":0,"index":859},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":535},{"krate":0,"index":540},{"krate":0,"index":544},{"krate":0,"index":552},{"krate":0,"index":557},{"krate":0,"index":570},{"krate":0,"index":574},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":603},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":620},{"krate":0,"index":625},{"krate":0,"index":629},{"krate":0,"index":632}],"decl_id":null,"docs":" Intrusive singly-linked list.\n","sig":null,"attributes":[{"value":"! Intrusive singly-linked list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":158545,"byte_end":158578,"line_start":8,"line_end":8,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":158951,"byte_end":158955,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"Link","qualname":"::singly_linked_list::Link","value":"Link {  }","parent":null,"children":[{"krate":0,"index":511}],"decl_id":null,"docs":" Intrusive link that allows an object to be inserted into a\n `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ Intrusive link that allows an object to be inserted into a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":158853,"byte_end":158915,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":158916,"byte_end":158939,"line_start":21,"line_end":21,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159059,"byte_end":159062,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"new","qualname":"<Link>::new","value":"fn () -> Link","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Link`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Link`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159002,"byte_end":159027,"line_start":27,"line_end":27,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159032,"byte_end":159041,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159249,"byte_end":159258,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"is_linked","qualname":"<Link>::is_linked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `Link` is linked into a `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ Checks whether the `Link` is linked into a `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159157,"byte_end":159223,"line_start":35,"line_end":35,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159228,"byte_end":159237,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159754,"byte_end":159766,"line_start":50,"line_end":50,"column_start":19,"column_end":31},"name":"force_unlink","qualname":"<Link>::force_unlink","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlinks an object from a `SinglyLinkedList`.","sig":null,"attributes":[{"value":"/ Forcibly unlinks an object from a `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159330,"byte_end":159387,"line_start":41,"line_end":41,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159392,"byte_end":159395,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159400,"byte_end":159412,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159417,"byte_end":159420,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ It is undefined behavior to call this function while still linked into a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159425,"byte_end":159501,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ `SinglyLinkedList`. The only situation where this function is useful is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159506,"byte_end":159581,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ after calling `fast_clear` on a `SinglyLinkedList`, since this clears","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159586,"byte_end":159659,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ the collection without marking the nodes as unlinked.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159664,"byte_end":159721,"line_start":48,"line_end":48,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159726,"byte_end":159735,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":535},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":162692,"byte_end":162698,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::singly_linked_list::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"decl_id":null,"docs":" A cursor which provides read-only access to a `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ A cursor which provides read-only access to a `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":162611,"byte_end":162680,"line_start":169,"line_end":169,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163154,"byte_end":163161,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Cursor>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the cursor is currently pointing to the null object.\n","sig":null,"attributes":[{"value":"/ Checks if the cursor is currently pointing to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163062,"byte_end":163128,"line_start":186,"line_end":186,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163133,"byte_end":163142,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163434,"byte_end":163437,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"name":"get","qualname":"<Cursor>::get","value":"fn (&self) -> Option<&'a A::Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the object that the cursor is currently\n pointing to.","sig":null,"attributes":[{"value":"/ Returns a reference to the object that the cursor is currently","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163221,"byte_end":163287,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/ pointing to.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163292,"byte_end":163308,"line_start":193,"line_end":193,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163313,"byte_end":163316,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163321,"byte_end":163392,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163397,"byte_end":163408,"line_start":196,"line_end":196,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163413,"byte_end":163422,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163856,"byte_end":163869,"line_start":212,"line_end":212,"column_start":12,"column_end":25},"name":"clone_pointer","qualname":"<Cursor>::clone_pointer","value":"fn (&self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Clones and returns the pointer that points to the element that the\n cursor is referencing.","sig":null,"attributes":[{"value":"/ Clones and returns the pointer that points to the element that the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163629,"byte_end":163699,"line_start":206,"line_end":206,"column_start":5,"column_end":75}},{"value":"/ cursor is referencing.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163704,"byte_end":163730,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163735,"byte_end":163738,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163743,"byte_end":163814,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163819,"byte_end":163830,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163835,"byte_end":163844,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164453,"byte_end":164462,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"move_next","qualname":"<Cursor>::move_next","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the next element of the `SinglyLinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the next element of the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164098,"byte_end":164165,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164170,"byte_end":164173,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164178,"byte_end":164251,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ the first element of the `SinglyLinkedList`. If it is pointing to the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164256,"byte_end":164329,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/ last element of the `SinglyLinkedList` then this will move it to the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164334,"byte_end":164406,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164411,"byte_end":164427,"line_start":225,"line_end":225,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164432,"byte_end":164441,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164990,"byte_end":164999,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"peek_next","qualname":"<Cursor>::peek_next","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the next element of the `SinglyLinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the next element of the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164644,"byte_end":164720,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164725,"byte_end":164728,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164733,"byte_end":164806,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ first element of the `SinglyLinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164811,"byte_end":164885,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ element of the `SinglyLinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164890,"byte_end":164964,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":164969,"byte_end":164978,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":552},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165190,"byte_end":165199,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"CursorMut","qualname":"::singly_linked_list::CursorMut","value":"CursorMut {  }","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556}],"decl_id":null,"docs":" A cursor which provides mutable access to a `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ A cursor which provides mutable access to a `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165111,"byte_end":165178,"line_start":248,"line_end":248,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165444,"byte_end":165451,"line_start":257,"line_end":257,"column_start":12,"column_end":19},"name":"is_null","qualname":"<CursorMut>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the cursor is currently pointing to the null object.\n","sig":null,"attributes":[{"value":"/ Checks if the cursor is currently pointing to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165352,"byte_end":165418,"line_start":255,"line_end":255,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165423,"byte_end":165432,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165722,"byte_end":165725,"line_start":267,"line_end":267,"column_start":12,"column_end":15},"name":"get","qualname":"<CursorMut>::get","value":"fn (&self) -> Option<&A::Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the object that the cursor is currently\n pointing to.","sig":null,"attributes":[{"value":"/ Returns a reference to the object that the cursor is currently","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165511,"byte_end":165577,"line_start":261,"line_end":261,"column_start":5,"column_end":71}},{"value":"/ pointing to.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165582,"byte_end":165598,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165603,"byte_end":165606,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This returns None if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165611,"byte_end":165680,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165685,"byte_end":165696,"line_start":265,"line_end":265,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165701,"byte_end":165710,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166225,"byte_end":166234,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"as_cursor","qualname":"<CursorMut>::as_cursor","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a read-only cursor pointing to the current element.","sig":null,"attributes":[{"value":"/ Returns a read-only cursor pointing to the current element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165914,"byte_end":165977,"line_start":275,"line_end":275,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165982,"byte_end":165985,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned `Cursor` is bound to that of the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165990,"byte_end":166055,"line_start":277,"line_end":277,"column_start":5,"column_end":70}},{"value":"/ `CursorMut`, which means it cannot outlive the `CursorMut` and that the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166060,"byte_end":166135,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ `CursorMut` is frozen for the lifetime of the `Cursor`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166140,"byte_end":166199,"line_start":279,"line_end":279,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166204,"byte_end":166213,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166718,"byte_end":166727,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"move_next","qualname":"<CursorMut>::move_next","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the next element of the `SinglyLinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the next element of the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166363,"byte_end":166430,"line_start":288,"line_end":288,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166435,"byte_end":166438,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166443,"byte_end":166516,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ the first element of the `SinglyLinkedList`. If it is pointing to the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166521,"byte_end":166594,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ last element of the `SinglyLinkedList` then this will move it to the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166599,"byte_end":166671,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166676,"byte_end":166692,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166697,"byte_end":166706,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167255,"byte_end":167264,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"peek_next","qualname":"<CursorMut>::peek_next","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the next element of the `SinglyLinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the next element of the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166909,"byte_end":166985,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166990,"byte_end":166993,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":166998,"byte_end":167071,"line_start":305,"line_end":305,"column_start":5,"column_end":78}},{"value":"/ first element of the `SinglyLinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167076,"byte_end":167150,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ element of the `SinglyLinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167155,"byte_end":167229,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167234,"byte_end":167243,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167730,"byte_end":167741,"line_start":323,"line_end":323,"column_start":12,"column_end":23},"name":"remove_next","qualname":"<CursorMut>::remove_next","value":"fn (&mut self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the next element from the `SinglyLinkedList`.","sig":null,"attributes":[{"value":"/ Removes the next element from the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167382,"byte_end":167439,"line_start":315,"line_end":315,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167444,"byte_end":167447,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ A pointer to the element that was removed is returned, and the cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167452,"byte_end":167528,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ not moved.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167533,"byte_end":167547,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167552,"byte_end":167555,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ If the cursor is currently pointing to the last element of the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167560,"byte_end":167626,"line_start":320,"line_end":320,"column_start":5,"column_end":71}},{"value":"/ `SinglyLinkedList` then no element is removed and `None` is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167631,"byte_end":167704,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":167709,"byte_end":167718,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168825,"byte_end":168842,"line_start":356,"line_end":356,"column_start":12,"column_end":29},"name":"replace_next_with","qualname":"<CursorMut>::replace_next_with","value":"fn (&mut self, val: A::Pointer) -> Result<A::Pointer, A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the next element from the `SinglyLinkedList` and inserts\n another object in its place.","sig":null,"attributes":[{"value":"/ Removes the next element from the `SinglyLinkedList` and inserts","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168243,"byte_end":168311,"line_start":341,"line_end":341,"column_start":5,"column_end":73}},{"value":"/ another object in its place.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168316,"byte_end":168348,"line_start":342,"line_end":342,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168353,"byte_end":168356,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ A pointer to the element that was removed is returned, and the cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168361,"byte_end":168437,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ not moved.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168442,"byte_end":168456,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168461,"byte_end":168464,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ If the cursor is currently pointing to the last element of the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168469,"byte_end":168535,"line_start":347,"line_end":347,"column_start":5,"column_end":71}},{"value":"/ `SinglyLinkedList` then no element is added or removed and an error is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168540,"byte_end":168614,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ returned containing the given `val` parameter.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168619,"byte_end":168669,"line_start":349,"line_end":349,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168674,"byte_end":168677,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168682,"byte_end":168694,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168699,"byte_end":168702,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168707,"byte_end":168779,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168784,"byte_end":168799,"line_start":354,"line_end":354,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":168804,"byte_end":168813,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169806,"byte_end":169818,"line_start":385,"line_end":385,"column_start":12,"column_end":24},"name":"insert_after","qualname":"<CursorMut>::insert_after","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `SinglyLinkedList` after the current one.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `SinglyLinkedList` after the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169432,"byte_end":169508,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169513,"byte_end":169516,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169521,"byte_end":169593,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ inserted at the front of the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169598,"byte_end":169650,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169655,"byte_end":169658,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169663,"byte_end":169675,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169680,"byte_end":169683,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169688,"byte_end":169760,"line_start":382,"line_end":382,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169765,"byte_end":169780,"line_start":383,"line_end":383,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":169785,"byte_end":169794,"line_start":384,"line_end":384,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170631,"byte_end":170643,"line_start":407,"line_end":407,"column_start":12,"column_end":24},"name":"splice_after","qualname":"<CursorMut>::splice_after","value":"fn (&mut self, mut list: SinglyLinkedList<A>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts the elements from the given `SinglyLinkedList` after the current\n one.","sig":null,"attributes":[{"value":"/ Inserts the elements from the given `SinglyLinkedList` after the current","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170159,"byte_end":170235,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170240,"byte_end":170248,"line_start":398,"line_end":398,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170253,"byte_end":170256,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new elements are","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170261,"byte_end":170335,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ inserted at the start of the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170340,"byte_end":170392,"line_start":401,"line_end":401,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170397,"byte_end":170400,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Note that if the cursor is not pointing to the last element of the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170405,"byte_end":170475,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/ `SinglyLinkedList` then the given list must be scanned to find its last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170480,"byte_end":170555,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/ element. This has linear time complexity.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170560,"byte_end":170605,"line_start":405,"line_end":405,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":170610,"byte_end":170619,"line_start":406,"line_end":406,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":171967,"byte_end":171978,"line_start":443,"line_end":443,"column_start":12,"column_end":23},"name":"split_after","qualname":"<CursorMut>::split_after","value":"fn (&mut self) -> SinglyLinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Splits the list into two after the current element. This will return a\n new list consisting of everything after the cursor, with the original\n list retaining everything before.","sig":null,"attributes":[{"value":"/ Splits the list into two after the current element. This will return a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":171616,"byte_end":171690,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ new list consisting of everything after the cursor, with the original","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":171695,"byte_end":171768,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ list retaining everything before.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":171773,"byte_end":171810,"line_start":438,"line_end":438,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":171815,"byte_end":171818,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the entire contents","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":171823,"byte_end":171896,"line_start":440,"line_end":440,"column_start":5,"column_end":78}},{"value":"/ of the `SinglyLinkedList` are moved.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":171901,"byte_end":171941,"line_start":441,"line_end":441,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":171946,"byte_end":171955,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":570},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":172959,"byte_end":172975,"line_start":475,"line_end":475,"column_start":12,"column_end":28},"name":"SinglyLinkedList","qualname":"::singly_linked_list::SinglyLinkedList","value":"SinglyLinkedList {  }","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" An intrusive singly-linked list.","sig":null,"attributes":[{"value":"/ An intrusive singly-linked list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":172784,"byte_end":172820,"line_start":471,"line_end":471,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":172821,"byte_end":172824,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ When this collection is dropped, all elements linked into it will be","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":172825,"byte_end":172897,"line_start":473,"line_end":473,"column_start":1,"column_end":73}},{"value":"/ converted back to owned pointers and dropped.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":172898,"byte_end":172947,"line_start":474,"line_end":474,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":173790,"byte_end":173793,"line_start":505,"line_end":505,"column_start":12,"column_end":15},"name":"new","qualname":"<SinglyLinkedList<A>>::new","value":"fn (adapter: A) -> SinglyLinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ Creates an empty `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":173687,"byte_end":173727,"line_start":502,"line_end":502,"column_start":5,"column_end":45}},{"value":"cfg(not (feature = \"nightly\"))","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":173732,"byte_end":173764,"line_start":503,"line_end":503,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":173769,"byte_end":173778,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174015,"byte_end":174023,"line_start":514,"line_end":514,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SinglyLinkedList<A>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `SinglyLinkedList` is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `SinglyLinkedList` is empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":173935,"byte_end":173989,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":173994,"byte_end":174003,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174148,"byte_end":174154,"line_start":520,"line_end":520,"column_start":12,"column_end":18},"name":"cursor","qualname":"<SinglyLinkedList<A>>::cursor","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a null `Cursor` for this list.\n","sig":null,"attributes":[{"value":"/ Returns a null `Cursor` for this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174080,"byte_end":174122,"line_start":518,"line_end":518,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174127,"byte_end":174136,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174352,"byte_end":174362,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"name":"cursor_mut","qualname":"<SinglyLinkedList<A>>::cursor_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a null `CursorMut` for this list.\n","sig":null,"attributes":[{"value":"/ Returns a null `CursorMut` for this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174281,"byte_end":174326,"line_start":527,"line_end":527,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174331,"byte_end":174340,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174689,"byte_end":174704,"line_start":542,"line_end":542,"column_start":19,"column_end":34},"name":"cursor_from_ptr","qualname":"<SinglyLinkedList<A>>::cursor_from_ptr","value":"fn (&self, ptr: *const A::Value) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Cursor` from a pointer to an element.","sig":null,"attributes":[{"value":"/ Creates a `Cursor` from a pointer to an element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174499,"byte_end":174551,"line_start":536,"line_end":536,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174556,"byte_end":174559,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174564,"byte_end":174576,"line_start":538,"line_end":538,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174581,"byte_end":174584,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174589,"byte_end":174656,"line_start":540,"line_end":540,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174661,"byte_end":174670,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175066,"byte_end":175085,"line_start":555,"line_end":555,"column_start":19,"column_end":38},"name":"cursor_mut_from_ptr","qualname":"<SinglyLinkedList<A>>::cursor_mut_from_ptr","value":"fn (&mut self, ptr: *const A::Value) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CursorMut` from a pointer to an element.","sig":null,"attributes":[{"value":"/ Creates a `CursorMut` from a pointer to an element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174873,"byte_end":174928,"line_start":549,"line_end":549,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174933,"byte_end":174936,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174941,"byte_end":174953,"line_start":551,"line_end":551,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174958,"byte_end":174961,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":174966,"byte_end":175033,"line_start":553,"line_end":553,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175038,"byte_end":175047,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175416,"byte_end":175421,"line_start":565,"line_end":565,"column_start":12,"column_end":17},"name":"front","qualname":"<SinglyLinkedList<A>>::front","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to the first element of the list. If the\n list is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to the first element of the list. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175264,"byte_end":175336,"line_start":562,"line_end":562,"column_start":5,"column_end":77}},{"value":"/ list is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175341,"byte_end":175390,"line_start":563,"line_end":563,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175395,"byte_end":175404,"line_start":564,"line_end":564,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175701,"byte_end":175710,"line_start":574,"line_end":574,"column_start":12,"column_end":21},"name":"front_mut","qualname":"<SinglyLinkedList<A>>::front_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to the first element of the list. If the\n the list is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to the first element of the list. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175542,"byte_end":175617,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ the list is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175622,"byte_end":175675,"line_start":572,"line_end":572,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175680,"byte_end":175689,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175932,"byte_end":175936,"line_start":582,"line_end":582,"column_start":12,"column_end":16},"name":"iter","qualname":"<SinglyLinkedList<A>>::iter","value":"fn (&self) -> Iter<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the objects in the `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the objects in the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175842,"byte_end":175906,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":175911,"byte_end":175920,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176357,"byte_end":176362,"line_start":595,"line_end":595,"column_start":12,"column_end":17},"name":"clear","qualname":"<SinglyLinkedList<A>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the `SinglyLinkedList`.","sig":null,"attributes":[{"value":"/ Removes all elements from the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176053,"byte_end":176106,"line_start":589,"line_end":589,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176111,"byte_end":176114,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ This will unlink all object currently in the list, which requires","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176119,"byte_end":176188,"line_start":591,"line_end":591,"column_start":5,"column_end":74}},{"value":"/ iterating through all elements in the `SinglyLinkedList`. Each element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176193,"byte_end":176270,"line_start":592,"line_end":592,"column_start":5,"column_end":82}},{"value":"/ converted back to an owned pointer and then dropped.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176275,"byte_end":176331,"line_start":593,"line_end":593,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176336,"byte_end":176345,"line_start":594,"line_end":594,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177109,"byte_end":177119,"line_start":615,"line_end":615,"column_start":12,"column_end":22},"name":"fast_clear","qualname":"<SinglyLinkedList<A>>::fast_clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Empties the `SinglyLinkedList` without unlinking or freeing objects in it.","sig":null,"attributes":[{"value":"/ Empties the `SinglyLinkedList` without unlinking or freeing objects in it.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176723,"byte_end":176801,"line_start":608,"line_end":608,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176806,"byte_end":176809,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ Since this does not unlink any objects, any attempts to link these","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176814,"byte_end":176884,"line_start":610,"line_end":610,"column_start":5,"column_end":75}},{"value":"/ objects into another `SinglyLinkedList` will fail but will not cause any","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176889,"byte_end":176965,"line_start":611,"line_end":611,"column_start":5,"column_end":81}},{"value":"/ memory unsafety. To unlink those objects manually, you must call the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":176970,"byte_end":177042,"line_start":612,"line_end":612,"column_start":5,"column_end":77}},{"value":"/ `force_unlink` function on them.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177047,"byte_end":177083,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177088,"byte_end":177097,"line_start":614,"line_end":614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177351,"byte_end":177355,"line_start":622,"line_end":622,"column_start":12,"column_end":16},"name":"take","qualname":"<SinglyLinkedList<A>>::take","value":"fn (&mut self) -> SinglyLinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Takes all the elements out of the `SinglyLinkedList`, leaving it empty.\n The taken elements are returned as a new `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ Takes all the elements out of the `SinglyLinkedList`, leaving it empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177181,"byte_end":177256,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ The taken elements are returned as a new `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177261,"byte_end":177325,"line_start":620,"line_end":620,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177330,"byte_end":177339,"line_start":621,"line_end":621,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177697,"byte_end":177707,"line_start":636,"line_end":636,"column_start":12,"column_end":22},"name":"push_front","qualname":"<SinglyLinkedList<A>>::push_front","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element at the start of the `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ Inserts a new element at the start of the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177606,"byte_end":177671,"line_start":634,"line_end":634,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177676,"byte_end":177685,"line_start":635,"line_end":635,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177948,"byte_end":177957,"line_start":644,"line_end":644,"column_start":12,"column_end":21},"name":"pop_front","qualname":"<SinglyLinkedList<A>>::pop_front","value":"fn (&mut self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the first element of the `SinglyLinkedList`.","sig":null,"attributes":[{"value":"/ Removes the first element of the `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177794,"byte_end":177850,"line_start":640,"line_end":640,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177855,"byte_end":177858,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the `SinglyLinkedList` is empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177863,"byte_end":177922,"line_start":642,"line_end":642,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":177927,"byte_end":177936,"line_start":643,"line_end":643,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":179729,"byte_end":179733,"line_start":704,"line_end":704,"column_start":12,"column_end":16},"name":"Iter","qualname":"::singly_linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"decl_id":null,"docs":" An iterator over references to the items of a `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ An iterator over references to the items of a `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":179648,"byte_end":179717,"line_start":703,"line_end":703,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":629},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":180687,"byte_end":180695,"line_start":737,"line_end":737,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::singly_linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":631}],"decl_id":null,"docs":" An iterator which consumes a `SinglyLinkedList`.\n","sig":null,"attributes":[{"value":"/ An iterator which consumes a `SinglyLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":180623,"byte_end":180675,"line_start":736,"line_end":736,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":636},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"xor_linked_list","qualname":"::xor_linked_list","value":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":862},{"krate":0,"index":874},{"krate":0,"index":872},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":663},{"krate":0,"index":875},{"krate":0,"index":882},{"krate":0,"index":880},{"krate":0,"index":878},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":677},{"krate":0,"index":681},{"krate":0,"index":690},{"krate":0,"index":696},{"krate":0,"index":714},{"krate":0,"index":719},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":754},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":774},{"krate":0,"index":779},{"krate":0,"index":783},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":794}],"decl_id":null,"docs":" Intrusive xor doubly-linked list which uses less memory than a regular doubly linked list","sig":null,"attributes":[{"value":"! Intrusive xor doubly-linked list which uses less memory than a regular doubly linked list","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195156,"byte_end":195249,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195250,"byte_end":195253,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! In exchange for less memory use, it is impossible to create a cursor from a pointer to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195254,"byte_end":195344,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"! an element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195345,"byte_end":195360,"line_start":11,"line_end":11,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":643},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195741,"byte_end":195745,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Link","qualname":"::xor_linked_list::Link","value":"Link {  }","parent":null,"children":[{"krate":0,"index":644}],"decl_id":null,"docs":" Intrusive link that allows an object to be inserted into a `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ Intrusive link that allows an object to be inserted into a `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195650,"byte_end":195729,"line_start":24,"line_end":24,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195843,"byte_end":195846,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Link>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Link`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Link`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195792,"byte_end":195817,"line_start":30,"line_end":30,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195822,"byte_end":195831,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196034,"byte_end":196043,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"is_linked","qualname":"<Link>::is_linked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the `Link` is linked into a `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ Checks whether the `Link` is linked into a `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195945,"byte_end":196008,"line_start":38,"line_end":38,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196013,"byte_end":196022,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196524,"byte_end":196536,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"name":"force_unlink","qualname":"<Link>::force_unlink","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlinks an object from a `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Forcibly unlinks an object from a `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196109,"byte_end":196163,"line_start":44,"line_end":44,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196168,"byte_end":196171,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196176,"byte_end":196188,"line_start":46,"line_end":46,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196193,"byte_end":196196,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ It is undefined behavior to call this function while still linked into a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196201,"byte_end":196277,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ `XorLinkedList`. The only situation where this function is useful is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196282,"byte_end":196354,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ after calling `fast_clear` on a `XorLinkedList`, since this clears","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196359,"byte_end":196429,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ the collection without marking the nodes as unlinked.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196434,"byte_end":196491,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":196496,"byte_end":196505,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":671},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":199917,"byte_end":199923,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::xor_linked_list::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"decl_id":null,"docs":" A cursor which provides read-only access to a `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ A cursor which provides read-only access to a `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":199839,"byte_end":199905,"line_start":189,"line_end":189,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200429,"byte_end":200436,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Cursor>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the cursor is currently pointing to the null object.\n","sig":null,"attributes":[{"value":"/ Checks if the cursor is currently pointing to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200337,"byte_end":200403,"line_start":208,"line_end":208,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200408,"byte_end":200417,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200707,"byte_end":200710,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"get","qualname":"<Cursor>::get","value":"fn (&self) -> Option<&'a A::Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the object that the cursor is currently\n pointing to.","sig":null,"attributes":[{"value":"/ Returns a reference to the object that the cursor is currently","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200496,"byte_end":200562,"line_start":214,"line_end":214,"column_start":5,"column_end":71}},{"value":"/ pointing to.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200567,"byte_end":200583,"line_start":215,"line_end":215,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200588,"byte_end":200591,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This returns None if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200596,"byte_end":200665,"line_start":217,"line_end":217,"column_start":5,"column_end":74}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200670,"byte_end":200681,"line_start":218,"line_end":218,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200686,"byte_end":200695,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201238,"byte_end":201247,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"move_next","qualname":"<Cursor>::move_next","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the next element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the next element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200900,"byte_end":200964,"line_start":228,"line_end":228,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200969,"byte_end":200972,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200977,"byte_end":201050,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ the first element of the `XorLinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201055,"byte_end":201130,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ element of the `XorLinkedList` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201135,"byte_end":201212,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201217,"byte_end":201226,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201989,"byte_end":201998,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"move_prev","qualname":"<Cursor>::move_prev","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the previous element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the previous element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201647,"byte_end":201715,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201720,"byte_end":201723,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201728,"byte_end":201801,"line_start":251,"line_end":251,"column_start":5,"column_end":78}},{"value":"/ the last element of the `XorLinkedList`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201806,"byte_end":201881,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ element of the `XorLinkedList` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201886,"byte_end":201963,"line_start":253,"line_end":253,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":201968,"byte_end":201977,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202735,"byte_end":202744,"line_start":276,"line_end":276,"column_start":12,"column_end":21},"name":"peek_next","qualname":"<Cursor>::peek_next","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the next element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the next element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202398,"byte_end":202471,"line_start":270,"line_end":270,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202476,"byte_end":202479,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202484,"byte_end":202557,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ first element of the `XorLinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202562,"byte_end":202633,"line_start":273,"line_end":273,"column_start":5,"column_end":76}},{"value":"/ element of the `XorLinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202638,"byte_end":202709,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202714,"byte_end":202723,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203199,"byte_end":203208,"line_start":288,"line_end":288,"column_start":12,"column_end":21},"name":"peek_prev","qualname":"<Cursor>::peek_prev","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the previous element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the previous element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202858,"byte_end":202935,"line_start":282,"line_end":282,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202940,"byte_end":202943,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":202948,"byte_end":203021,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ last element of the `XorLinkedList`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203026,"byte_end":203097,"line_start":285,"line_end":285,"column_start":5,"column_end":76}},{"value":"/ element of the `XorLinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203102,"byte_end":203173,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203178,"byte_end":203187,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":690},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203396,"byte_end":203405,"line_start":296,"line_end":296,"column_start":12,"column_end":21},"name":"CursorMut","qualname":"::xor_linked_list::CursorMut","value":"CursorMut {  }","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695}],"decl_id":null,"docs":" A cursor which provides mutable access to a `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ A cursor which provides mutable access to a `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203320,"byte_end":203384,"line_start":295,"line_end":295,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203671,"byte_end":203678,"line_start":305,"line_end":305,"column_start":12,"column_end":19},"name":"is_null","qualname":"<CursorMut>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the cursor is currently pointing to the null object.\n","sig":null,"attributes":[{"value":"/ Checks if the cursor is currently pointing to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203579,"byte_end":203645,"line_start":303,"line_end":303,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203650,"byte_end":203659,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203949,"byte_end":203952,"line_start":315,"line_end":315,"column_start":12,"column_end":15},"name":"get","qualname":"<CursorMut>::get","value":"fn (&self) -> Option<&A::Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the object that the cursor is currently\n pointing to.","sig":null,"attributes":[{"value":"/ Returns a reference to the object that the cursor is currently","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203738,"byte_end":203804,"line_start":309,"line_end":309,"column_start":5,"column_end":71}},{"value":"/ pointing to.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203809,"byte_end":203825,"line_start":310,"line_end":310,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203830,"byte_end":203833,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This returns None if the cursor is currently pointing to the null","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203838,"byte_end":203907,"line_start":312,"line_end":312,"column_start":5,"column_end":74}},{"value":"/ object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203912,"byte_end":203923,"line_start":313,"line_end":313,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203928,"byte_end":203937,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204450,"byte_end":204459,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"name":"as_cursor","qualname":"<CursorMut>::as_cursor","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a read-only cursor pointing to the current element.","sig":null,"attributes":[{"value":"/ Returns a read-only cursor pointing to the current element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204139,"byte_end":204202,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204207,"byte_end":204210,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned `Cursor` is bound to that of the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204215,"byte_end":204280,"line_start":325,"line_end":325,"column_start":5,"column_end":70}},{"value":"/ `CursorMut`, which means it cannot outlive the `CursorMut` and that the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204285,"byte_end":204360,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ `CursorMut` is frozen for the lifetime of the `Cursor`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204365,"byte_end":204424,"line_start":327,"line_end":327,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204429,"byte_end":204438,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204955,"byte_end":204964,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"move_next","qualname":"<CursorMut>::move_next","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the next element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the next element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204617,"byte_end":204681,"line_start":337,"line_end":337,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204686,"byte_end":204689,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204694,"byte_end":204767,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ the first element of the `XorLinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204772,"byte_end":204847,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ element of the `XorLinkedList` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204852,"byte_end":204929,"line_start":341,"line_end":341,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":204934,"byte_end":204943,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":205706,"byte_end":205715,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"move_prev","qualname":"<CursorMut>::move_prev","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the previous element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Moves the cursor to the previous element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":205364,"byte_end":205432,"line_start":358,"line_end":358,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":205437,"byte_end":205440,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will move it to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":205445,"byte_end":205518,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ the last element of the `XorLinkedList`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":205523,"byte_end":205598,"line_start":361,"line_end":361,"column_start":5,"column_end":80}},{"value":"/ element of the `XorLinkedList` then this will move it to the null object.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":205603,"byte_end":205680,"line_start":362,"line_end":362,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":205685,"byte_end":205694,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206452,"byte_end":206461,"line_start":385,"line_end":385,"column_start":12,"column_end":21},"name":"peek_next","qualname":"<CursorMut>::peek_next","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the next element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the next element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206115,"byte_end":206188,"line_start":379,"line_end":379,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206193,"byte_end":206196,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206201,"byte_end":206274,"line_start":381,"line_end":381,"column_start":5,"column_end":78}},{"value":"/ first element of the `XorLinkedList`. If it is pointing to the last","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206279,"byte_end":206350,"line_start":382,"line_end":382,"column_start":5,"column_end":76}},{"value":"/ element of the `XorLinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206355,"byte_end":206426,"line_start":383,"line_end":383,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206431,"byte_end":206440,"line_start":384,"line_end":384,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206920,"byte_end":206929,"line_start":397,"line_end":397,"column_start":12,"column_end":21},"name":"peek_prev","qualname":"<CursorMut>::peek_prev","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a cursor pointing to the previous element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Returns a cursor pointing to the previous element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206579,"byte_end":206656,"line_start":391,"line_end":391,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206661,"byte_end":206664,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointer to the null object then this will return the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206669,"byte_end":206742,"line_start":393,"line_end":393,"column_start":5,"column_end":78}},{"value":"/ last element of the `XorLinkedList`. If it is pointing to the first","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206747,"byte_end":206818,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ element of the `XorLinkedList` then this will return a null cursor.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206823,"byte_end":206894,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":206899,"byte_end":206908,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207415,"byte_end":207427,"line_start":413,"line_end":413,"column_start":12,"column_end":24},"name":"insert_after","qualname":"<CursorMut>::insert_after","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `XorLinkedList` after the current one.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `XorLinkedList` after the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207047,"byte_end":207120,"line_start":403,"line_end":403,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207125,"byte_end":207128,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207133,"byte_end":207205,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/ inserted at the front of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207210,"byte_end":207259,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207264,"byte_end":207267,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207272,"byte_end":207284,"line_start":408,"line_end":408,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207289,"byte_end":207292,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207297,"byte_end":207369,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207374,"byte_end":207389,"line_start":411,"line_end":411,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":207394,"byte_end":207403,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208598,"byte_end":208611,"line_start":447,"line_end":447,"column_start":12,"column_end":25},"name":"insert_before","qualname":"<CursorMut>::insert_before","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the `XorLinkedList` before the current one.","sig":null,"attributes":[{"value":"/ Inserts a new element into the `XorLinkedList` before the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208231,"byte_end":208305,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208310,"byte_end":208313,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208318,"byte_end":208390,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ inserted at the end of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208395,"byte_end":208442,"line_start":440,"line_end":440,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208447,"byte_end":208450,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208455,"byte_end":208467,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208472,"byte_end":208475,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208480,"byte_end":208552,"line_start":444,"line_end":444,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208557,"byte_end":208572,"line_start":445,"line_end":445,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":208577,"byte_end":208586,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":209784,"byte_end":209790,"line_start":479,"line_end":479,"column_start":12,"column_end":18},"name":"remove","qualname":"<CursorMut>::remove","value":"fn (&mut self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the current element from the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Removes the current element from the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":209415,"byte_end":209472,"line_start":471,"line_end":471,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":209477,"byte_end":209480,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ A pointer to the element that was removed is returned, and the cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":209485,"byte_end":209561,"line_start":473,"line_end":473,"column_start":5,"column_end":81}},{"value":"/ moved to point to the next element in the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":209566,"byte_end":209628,"line_start":474,"line_end":474,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":209633,"byte_end":209636,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ If the cursor is currently pointing to the null object then no element","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":209641,"byte_end":209715,"line_start":476,"line_end":476,"column_start":5,"column_end":79}},{"value":"/ is removed and `None` is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":209720,"byte_end":209758,"line_start":477,"line_end":477,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":209763,"byte_end":209772,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211406,"byte_end":211418,"line_start":530,"line_end":530,"column_start":12,"column_end":24},"name":"replace_with","qualname":"<CursorMut>::replace_with","value":"fn (&mut self, val: A::Pointer) -> Result<A::Pointer, A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the current element from the `XorLinkedList` and inserts another\n object in its place.","sig":null,"attributes":[{"value":"/ Removes the current element from the `XorLinkedList` and inserts another","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":210859,"byte_end":210935,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ object in its place.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":210940,"byte_end":210964,"line_start":517,"line_end":517,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":210969,"byte_end":210972,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ A pointer to the element that was removed is returned, and the cursor is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":210977,"byte_end":211053,"line_start":519,"line_end":519,"column_start":5,"column_end":81}},{"value":"/ modified to point to the newly added element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211058,"byte_end":211107,"line_start":520,"line_end":520,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211112,"byte_end":211115,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ If the cursor is currently pointing to the null object then an error is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211120,"byte_end":211195,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ returned containing the given `val` parameter.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211200,"byte_end":211250,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211255,"byte_end":211258,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211263,"byte_end":211275,"line_start":525,"line_end":525,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211280,"byte_end":211283,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Panics if the new element is already linked to a different intrusive","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211288,"byte_end":211360,"line_start":527,"line_end":527,"column_start":5,"column_end":77}},{"value":"/ collection.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211365,"byte_end":211380,"line_start":528,"line_end":528,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":211385,"byte_end":211394,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":212614,"byte_end":212626,"line_start":564,"line_end":564,"column_start":12,"column_end":24},"name":"splice_after","qualname":"<CursorMut>::splice_after","value":"fn (&mut self, mut list: XorLinkedList<A>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts the elements from the given `XorLinkedList` after the current one.","sig":null,"attributes":[{"value":"/ Inserts the elements from the given `XorLinkedList` after the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":212369,"byte_end":212447,"line_start":559,"line_end":559,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":212452,"byte_end":212455,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new elements are","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":212460,"byte_end":212534,"line_start":561,"line_end":561,"column_start":5,"column_end":79}},{"value":"/ inserted at the start of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":212539,"byte_end":212588,"line_start":562,"line_end":562,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":212593,"byte_end":212602,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":214040,"byte_end":214053,"line_start":600,"line_end":600,"column_start":12,"column_end":25},"name":"splice_before","qualname":"<CursorMut>::splice_before","value":"fn (&mut self, mut list: XorLinkedList<A>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves all element from the given `XorLinkedList` before the current one.","sig":null,"attributes":[{"value":"/ Moves all element from the given `XorLinkedList` before the current one.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":213799,"byte_end":213875,"line_start":595,"line_end":595,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":213880,"byte_end":213883,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the new elements are","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":213888,"byte_end":213962,"line_start":597,"line_end":597,"column_start":5,"column_end":79}},{"value":"/ inserted at the end of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":213967,"byte_end":214014,"line_start":598,"line_end":598,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":214019,"byte_end":214028,"line_start":599,"line_end":599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":215574,"byte_end":215585,"line_start":638,"line_end":638,"column_start":12,"column_end":23},"name":"split_after","qualname":"<CursorMut>::split_after","value":"fn (&mut self) -> XorLinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Splits the list into two after the current element. This will return a\n new list consisting of everything after the cursor, with the original\n list retaining everything before.","sig":null,"attributes":[{"value":"/ Splits the list into two after the current element. This will return a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":215226,"byte_end":215300,"line_start":631,"line_end":631,"column_start":5,"column_end":79}},{"value":"/ new list consisting of everything after the cursor, with the original","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":215305,"byte_end":215378,"line_start":632,"line_end":632,"column_start":5,"column_end":78}},{"value":"/ list retaining everything before.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":215383,"byte_end":215420,"line_start":633,"line_end":633,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":215425,"byte_end":215428,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the entire contents","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":215433,"byte_end":215506,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/ of the `XorLinkedList` are moved.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":215511,"byte_end":215548,"line_start":636,"line_end":636,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":215553,"byte_end":215562,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":216931,"byte_end":216943,"line_start":677,"line_end":677,"column_start":12,"column_end":24},"name":"split_before","qualname":"<CursorMut>::split_before","value":"fn (&mut self) -> XorLinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Splits the list into two before the current element. This will return a\n new list consisting of everything before the cursor, with the original\n list retaining everything after.","sig":null,"attributes":[{"value":"/ Splits the list into two before the current element. This will return a","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":216582,"byte_end":216657,"line_start":670,"line_end":670,"column_start":5,"column_end":80}},{"value":"/ new list consisting of everything before the cursor, with the original","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":216662,"byte_end":216736,"line_start":671,"line_end":671,"column_start":5,"column_end":79}},{"value":"/ list retaining everything after.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":216741,"byte_end":216777,"line_start":672,"line_end":672,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":216782,"byte_end":216785,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ If the cursor is pointing at the null object then the entire contents","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":216790,"byte_end":216863,"line_start":674,"line_end":674,"column_start":5,"column_end":78}},{"value":"/ of the `XorLinkedList` are moved.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":216868,"byte_end":216905,"line_start":675,"line_end":675,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":216910,"byte_end":216919,"line_start":676,"line_end":676,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":714},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218462,"byte_end":218475,"line_start":721,"line_end":721,"column_start":12,"column_end":25},"name":"XorLinkedList","qualname":"::xor_linked_list::XorLinkedList","value":"XorLinkedList {  }","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":" Intrusive xor doubly-linked list which uses less memory than a regular doubly linked list","sig":null,"attributes":[{"value":"/ Intrusive xor doubly-linked list which uses less memory than a regular doubly linked list","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218119,"byte_end":218212,"line_start":714,"line_end":714,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218213,"byte_end":218216,"line_start":715,"line_end":715,"column_start":1,"column_end":4}},{"value":"/ In exchange for less memory use, it is impossible to create a cursor from a pointer to","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218217,"byte_end":218307,"line_start":716,"line_end":716,"column_start":1,"column_end":91}},{"value":"/ an element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218308,"byte_end":218323,"line_start":717,"line_end":717,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218324,"byte_end":218327,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ When this collection is dropped, all elements linked into it will be","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218328,"byte_end":218400,"line_start":719,"line_end":719,"column_start":1,"column_end":73}},{"value":"/ converted back to owned pointers and dropped.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218401,"byte_end":218450,"line_start":720,"line_end":720,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218988,"byte_end":218991,"line_start":742,"line_end":742,"column_start":12,"column_end":15},"name":"new","qualname":"<XorLinkedList<A>>::new","value":"fn (adapter: A) -> XorLinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ Creates an empty `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218888,"byte_end":218925,"line_start":739,"line_end":739,"column_start":5,"column_end":42}},{"value":"cfg(not (feature = \"nightly\"))","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218930,"byte_end":218962,"line_start":740,"line_end":740,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218967,"byte_end":218976,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219231,"byte_end":219239,"line_start":752,"line_end":752,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<XorLinkedList<A>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `XorLinkedList` is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `XorLinkedList` is empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219154,"byte_end":219205,"line_start":750,"line_end":750,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219210,"byte_end":219219,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219364,"byte_end":219370,"line_start":758,"line_end":758,"column_start":12,"column_end":18},"name":"cursor","qualname":"<XorLinkedList<A>>::cursor","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a null `Cursor` for this list.\n","sig":null,"attributes":[{"value":"/ Returns a null `Cursor` for this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219296,"byte_end":219338,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219343,"byte_end":219352,"line_start":757,"line_end":757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219674,"byte_end":219684,"line_start":771,"line_end":771,"column_start":12,"column_end":22},"name":"cursor_mut","qualname":"<XorLinkedList<A>>::cursor_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a null `CursorMut` for this list.\n","sig":null,"attributes":[{"value":"/ Returns a null `CursorMut` for this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219603,"byte_end":219648,"line_start":769,"line_end":769,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219653,"byte_end":219662,"line_start":770,"line_end":770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":220262,"byte_end":220286,"line_start":789,"line_end":789,"column_start":19,"column_end":43},"name":"cursor_from_ptr_and_prev","qualname":"<XorLinkedList<A>>::cursor_from_ptr_and_prev","value":"fn (&self, ptr: *const A::Value, prev: *const A::Value) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Cursor` from a pointer to an element and a pointer to the previous element.","sig":null,"attributes":[{"value":"/ Creates a `Cursor` from a pointer to an element and a pointer to the previous element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":219927,"byte_end":220017,"line_start":782,"line_end":782,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":220022,"byte_end":220025,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":220030,"byte_end":220042,"line_start":784,"line_end":784,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":220047,"byte_end":220050,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":220055,"byte_end":220122,"line_start":786,"line_end":786,"column_start":5,"column_end":72}},{"value":"/ `prev` must be a pointer to an object that is the previous object in this list (null for the head)","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":220127,"byte_end":220229,"line_start":787,"line_end":787,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":220234,"byte_end":220243,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":221286,"byte_end":221314,"line_start":823,"line_end":823,"column_start":19,"column_end":47},"name":"cursor_mut_from_ptr_and_prev","qualname":"<XorLinkedList<A>>::cursor_mut_from_ptr_and_prev","value":"fn (&mut self, ptr: *const A::Value, prev: *const A::Value) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CursorMut` from a pointer to an element and a pointer to the previous element.","sig":null,"attributes":[{"value":"/ Creates a `CursorMut` from a pointer to an element and a pointer to the previous element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":220948,"byte_end":221041,"line_start":816,"line_end":816,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":221046,"byte_end":221049,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":221054,"byte_end":221066,"line_start":818,"line_end":818,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":221071,"byte_end":221074,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":221079,"byte_end":221146,"line_start":820,"line_end":820,"column_start":5,"column_end":72}},{"value":"/ `prev` must be a pointer to an object that is the previous object in this list (null for the head)","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":221151,"byte_end":221253,"line_start":821,"line_end":821,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":221258,"byte_end":221267,"line_start":822,"line_end":822,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":222313,"byte_end":222337,"line_start":857,"line_end":857,"column_start":19,"column_end":43},"name":"cursor_from_ptr_and_next","qualname":"<XorLinkedList<A>>::cursor_from_ptr_and_next","value":"fn (&self, ptr: *const A::Value, next: *const A::Value) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Cursor` from a pointer to an element and a pointer to the next element.","sig":null,"attributes":[{"value":"/ Creates a `Cursor` from a pointer to an element and a pointer to the next element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":221986,"byte_end":222072,"line_start":850,"line_end":850,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":222077,"byte_end":222080,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":222085,"byte_end":222097,"line_start":852,"line_end":852,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":222102,"byte_end":222105,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":222110,"byte_end":222177,"line_start":854,"line_end":854,"column_start":5,"column_end":72}},{"value":"/ `next` must be a pointer to an object that is the next object in this list (null for the tail)","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":222182,"byte_end":222280,"line_start":855,"line_end":855,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":222285,"byte_end":222294,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":223329,"byte_end":223357,"line_start":891,"line_end":891,"column_start":19,"column_end":47},"name":"cursor_mut_from_ptr_and_next","qualname":"<XorLinkedList<A>>::cursor_mut_from_ptr_and_next","value":"fn (&mut self, ptr: *const A::Value, next: *const A::Value) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CursorMut` from a pointer to an element and a pointer to the next element.","sig":null,"attributes":[{"value":"/ Creates a `CursorMut` from a pointer to an element and a pointer to the next element.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":222999,"byte_end":223088,"line_start":884,"line_end":884,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":223093,"byte_end":223096,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":223101,"byte_end":223113,"line_start":886,"line_end":886,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":223118,"byte_end":223121,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be a pointer to an object that is part of this list.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":223126,"byte_end":223193,"line_start":888,"line_end":888,"column_start":5,"column_end":72}},{"value":"/ `next` must be a pointer to an object that is the next object in this list (null for the tail)","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":223198,"byte_end":223296,"line_start":889,"line_end":889,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":223301,"byte_end":223310,"line_start":890,"line_end":890,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224181,"byte_end":224186,"line_start":921,"line_end":921,"column_start":12,"column_end":17},"name":"front","qualname":"<XorLinkedList<A>>::front","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to the first element of the list. If the\n list is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to the first element of the list. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224029,"byte_end":224101,"line_start":918,"line_end":918,"column_start":5,"column_end":77}},{"value":"/ list is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224106,"byte_end":224155,"line_start":919,"line_end":919,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224160,"byte_end":224169,"line_start":920,"line_end":920,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224466,"byte_end":224475,"line_start":930,"line_end":930,"column_start":12,"column_end":21},"name":"front_mut","qualname":"<XorLinkedList<A>>::front_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to the first element of the list. If the\n the list is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to the first element of the list. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224307,"byte_end":224382,"line_start":927,"line_end":927,"column_start":5,"column_end":80}},{"value":"/ the list is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224387,"byte_end":224440,"line_start":928,"line_end":928,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224445,"byte_end":224454,"line_start":929,"line_end":929,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224758,"byte_end":224762,"line_start":939,"line_end":939,"column_start":12,"column_end":16},"name":"back","qualname":"<XorLinkedList<A>>::back","value":"fn (&self) -> Cursor<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Cursor` pointing to the last element of the list. If the\n list is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `Cursor` pointing to the last element of the list. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224607,"byte_end":224678,"line_start":936,"line_end":936,"column_start":5,"column_end":76}},{"value":"/ list is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224683,"byte_end":224732,"line_start":937,"line_end":937,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224737,"byte_end":224746,"line_start":938,"line_end":938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225040,"byte_end":225048,"line_start":947,"line_end":947,"column_start":12,"column_end":20},"name":"back_mut","qualname":"<XorLinkedList<A>>::back_mut","value":"fn (&mut self) -> CursorMut<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `CursorMut` pointing to the last element of the list. If the\n the list is empty then a null cursor is returned.\n","sig":null,"attributes":[{"value":"/ Returns a `CursorMut` pointing to the last element of the list. If the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224882,"byte_end":224956,"line_start":944,"line_end":944,"column_start":5,"column_end":79}},{"value":"/ the list is empty then a null cursor is returned.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":224961,"byte_end":225014,"line_start":945,"line_end":945,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225019,"byte_end":225028,"line_start":946,"line_end":946,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225267,"byte_end":225271,"line_start":955,"line_end":955,"column_start":12,"column_end":16},"name":"iter","qualname":"<XorLinkedList<A>>::iter","value":"fn (&self) -> Iter<'_, A>","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the objects in the `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the objects in the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225180,"byte_end":225241,"line_start":953,"line_end":953,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225246,"byte_end":225255,"line_start":954,"line_end":954,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225796,"byte_end":225801,"line_start":971,"line_end":971,"column_start":12,"column_end":17},"name":"clear","qualname":"<XorLinkedList<A>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Removes all elements from the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225498,"byte_end":225548,"line_start":965,"line_end":965,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225553,"byte_end":225556,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ This will unlink all object currently in the list, which requires","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225561,"byte_end":225630,"line_start":967,"line_end":967,"column_start":5,"column_end":74}},{"value":"/ iterating through all elements in the `XorLinkedList`. Each element is","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225635,"byte_end":225709,"line_start":968,"line_end":968,"column_start":5,"column_end":79}},{"value":"/ converted back to an owned pointer and then dropped.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225714,"byte_end":225770,"line_start":969,"line_end":969,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":225775,"byte_end":225784,"line_start":970,"line_end":970,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226622,"byte_end":226632,"line_start":993,"line_end":993,"column_start":12,"column_end":22},"name":"fast_clear","qualname":"<XorLinkedList<A>>::fast_clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Empties the `XorLinkedList` without unlinking or freeing objects in it.","sig":null,"attributes":[{"value":"/ Empties the `XorLinkedList` without unlinking or freeing objects in it.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226242,"byte_end":226317,"line_start":986,"line_end":986,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226322,"byte_end":226325,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ Since this does not unlink any objects, any attempts to link these","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226330,"byte_end":226400,"line_start":988,"line_end":988,"column_start":5,"column_end":75}},{"value":"/ objects into another `XorLinkedList` will fail but will not cause any","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226405,"byte_end":226478,"line_start":989,"line_end":989,"column_start":5,"column_end":78}},{"value":"/ memory unsafety. To unlink those objects manually, you must call the","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226483,"byte_end":226555,"line_start":990,"line_end":990,"column_start":5,"column_end":77}},{"value":"/ `force_unlink` function on them.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226560,"byte_end":226596,"line_start":991,"line_end":991,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226601,"byte_end":226610,"line_start":992,"line_end":992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226887,"byte_end":226891,"line_start":1001,"line_end":1001,"column_start":12,"column_end":16},"name":"take","qualname":"<XorLinkedList<A>>::take","value":"fn (&mut self) -> XorLinkedList<A>","parent":null,"children":[],"decl_id":null,"docs":" Takes all the elements out of the `XorLinkedList`, leaving it empty. The\n taken elements are returned as a new `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ Takes all the elements out of the `XorLinkedList`, leaving it empty. The","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226723,"byte_end":226799,"line_start":998,"line_end":998,"column_start":5,"column_end":81}},{"value":"/ taken elements are returned as a new `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226804,"byte_end":226861,"line_start":999,"line_end":999,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":226866,"byte_end":226875,"line_start":1000,"line_end":1000,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227456,"byte_end":227466,"line_start":1021,"line_end":1021,"column_start":12,"column_end":22},"name":"push_front","qualname":"<XorLinkedList<A>>::push_front","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element at the start of the `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ Inserts a new element at the start of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227368,"byte_end":227430,"line_start":1019,"line_end":1019,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227435,"byte_end":227444,"line_start":1020,"line_end":1020,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227639,"byte_end":227648,"line_start":1027,"line_end":1027,"column_start":12,"column_end":21},"name":"push_back","qualname":"<XorLinkedList<A>>::push_back","value":"fn (&mut self, val: A::Pointer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element at the end of the `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ Inserts a new element at the end of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227553,"byte_end":227613,"line_start":1025,"line_end":1025,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227618,"byte_end":227627,"line_start":1026,"line_end":1026,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227884,"byte_end":227893,"line_start":1035,"line_end":1035,"column_start":12,"column_end":21},"name":"pop_front","qualname":"<XorLinkedList<A>>::pop_front","value":"fn (&mut self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the first element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Removes the first element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227736,"byte_end":227789,"line_start":1031,"line_end":1031,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227794,"byte_end":227797,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the `XorLinkedList` is empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227802,"byte_end":227858,"line_start":1033,"line_end":1033,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227863,"byte_end":227872,"line_start":1034,"line_end":1034,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228121,"byte_end":228129,"line_start":1043,"line_end":1043,"column_start":12,"column_end":20},"name":"pop_back","qualname":"<XorLinkedList<A>>::pop_back","value":"fn (&mut self) -> Option<A::Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element of the `XorLinkedList`.","sig":null,"attributes":[{"value":"/ Removes the last element of the `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":227974,"byte_end":228026,"line_start":1039,"line_end":1039,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228031,"byte_end":228034,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ This returns `None` if the `XorLinkedList` is empty.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228039,"byte_end":228095,"line_start":1041,"line_end":1041,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228100,"byte_end":228109,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":766},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":229854,"byte_end":229858,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"Iter","qualname":"::xor_linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773}],"decl_id":null,"docs":" An iterator over references to the items of a `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ An iterator over references to the items of a `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":229776,"byte_end":229842,"line_start":1102,"line_end":1102,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":787},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":231704,"byte_end":231712,"line_start":1164,"line_end":1164,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::xor_linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":789}],"decl_id":null,"docs":" An iterator which consumes a `XorLinkedList`.\n","sig":null,"attributes":[{"value":"/ An iterator which consumes a `XorLinkedList`.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":231643,"byte_end":231692,"line_start":1163,"line_end":1163,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":885},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12513,"byte_end":12521,"line_start":328,"line_end":328,"column_start":5,"column_end":13},"name":"Included","qualname":"::Bound::Included","value":"Bound::Included(T)","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" An inclusive bound.\n","sig":null,"attributes":[{"value":"/ An inclusive bound.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12485,"byte_end":12508,"line_start":327,"line_end":327,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":888},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12558,"byte_end":12566,"line_start":330,"line_end":330,"column_start":5,"column_end":13},"name":"Excluded","qualname":"::Bound::Excluded","value":"Bound::Excluded(T)","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" An exclusive bound.\n","sig":null,"attributes":[{"value":"/ An exclusive bound.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12530,"byte_end":12553,"line_start":329,"line_end":329,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":891},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12657,"byte_end":12666,"line_start":332,"line_end":332,"column_start":5,"column_end":14},"name":"Unbounded","qualname":"::Bound::Unbounded","value":"Bound::Unbounded","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" An infinite endpoint. Indicates that there is no bound in this direction.\n","sig":null,"attributes":[{"value":"/ An infinite endpoint. Indicates that there is no bound in this direction.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12575,"byte_end":12652,"line_start":331,"line_end":331,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":883},"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12470,"byte_end":12475,"line_start":326,"line_end":326,"column_start":10,"column_end":15},"name":"Bound","qualname":"::Bound","value":"Bound::{Included, Excluded, Unbounded}","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":891}],"decl_id":null,"docs":" An endpoint of a range of keys.\n","sig":null,"attributes":[{"value":"/ An endpoint of a range of keys.","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":12374,"byte_end":12409,"line_start":324,"line_end":324,"column_start":1,"column_end":36}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":14584,"byte_end":14593,"line_start":55,"line_end":55,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":14866,"byte_end":14869,"line_start":67,"line_end":67,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":15140,"byte_end":15142,"line_start":79,"line_end":79,"column_start":48,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":15402,"byte_end":15405,"line_start":91,"line_end":91,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":16314,"byte_end":16326,"line_start":117,"line_end":117,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21144,"byte_end":21153,"line_start":28,"line_end":28,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21661,"byte_end":21670,"line_start":49,"line_end":49,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22336,"byte_end":22345,"line_start":70,"line_end":70,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22474,"byte_end":22483,"line_start":77,"line_end":77,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22613,"byte_end":22622,"line_start":86,"line_end":86,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22747,"byte_end":22756,"line_start":93,"line_end":93,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22880,"byte_end":22889,"line_start":100,"line_end":100,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":23062,"byte_end":23071,"line_start":107,"line_end":107,"column_start":40,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":23118,"byte_end":23127,"line_start":109,"line_end":109,"column_start":40,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":34927,"byte_end":34931,"line_start":26,"line_end":26,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35884,"byte_end":35888,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":36055,"byte_end":36059,"line_start":61,"line_end":61,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":36169,"byte_end":36173,"line_start":69,"line_end":69,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":36365,"byte_end":36369,"line_start":78,"line_end":78,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":37052,"byte_end":37059,"line_start":101,"line_end":101,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39503,"byte_end":39509,"line_start":206,"line_end":206,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39706,"byte_end":39712,"line_start":216,"line_end":216,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42916,"byte_end":42925,"line_start":310,"line_end":310,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":54529,"byte_end":54539,"line_start":643,"line_end":643,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60658,"byte_end":60668,"line_start":851,"line_end":851,"column_start":54,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60894,"byte_end":60904,"line_start":855,"line_end":855,"column_start":54,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":61030,"byte_end":61040,"line_start":858,"line_end":858,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":61163,"byte_end":61173,"line_start":865,"line_end":865,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":61611,"byte_end":61621,"line_start":885,"line_end":885,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":61755,"byte_end":61765,"line_start":891,"line_end":891,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":62331,"byte_end":62335,"line_start":910,"line_end":910,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":62900,"byte_end":62904,"line_start":929,"line_end":929,"column_start":64,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":63429,"byte_end":63433,"line_start":946,"line_end":946,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":63954,"byte_end":63962,"line_start":965,"line_end":965,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":64150,"byte_end":64158,"line_start":973,"line_end":973,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":80968,"byte_end":80972,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81990,"byte_end":81994,"line_start":63,"line_end":63,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":82161,"byte_end":82165,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":82275,"byte_end":82279,"line_start":75,"line_end":75,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":82471,"byte_end":82475,"line_start":84,"line_end":84,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":83299,"byte_end":83306,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96195,"byte_end":96201,"line_start":513,"line_end":513,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96403,"byte_end":96409,"line_start":523,"line_end":523,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99611,"byte_end":99620,"line_start":617,"line_end":617,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107164,"byte_end":107173,"line_start":823,"line_end":823,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108726,"byte_end":108732,"line_start":864,"line_end":864,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":114610,"byte_end":114616,"line_start":1063,"line_end":1063,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":125330,"byte_end":125336,"line_start":1368,"line_end":1368,"column_start":54,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":125562,"byte_end":125568,"line_start":1372,"line_end":1372,"column_start":54,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":125694,"byte_end":125700,"line_start":1375,"line_end":1375,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":125823,"byte_end":125829,"line_start":1382,"line_end":1382,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":126614,"byte_end":126620,"line_start":1414,"line_end":1414,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":126746,"byte_end":126752,"line_start":1420,"line_end":1420,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127359,"byte_end":127371,"line_start":1441,"line_end":1441,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128454,"byte_end":128459,"line_start":1478,"line_end":1478,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":130142,"byte_end":130146,"line_start":1524,"line_end":1524,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":130711,"byte_end":130715,"line_start":1543,"line_end":1543,"column_start":64,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":131240,"byte_end":131244,"line_start":1560,"line_end":1560,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":131795,"byte_end":131803,"line_start":1581,"line_end":1581,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":133066,"byte_end":133074,"line_start":1617,"line_end":1617,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":158991,"byte_end":158995,"line_start":26,"line_end":26,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159926,"byte_end":159930,"line_start":56,"line_end":56,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":160097,"byte_end":160101,"line_start":60,"line_end":60,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":160211,"byte_end":160215,"line_start":68,"line_end":68,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":160407,"byte_end":160411,"line_start":77,"line_end":77,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":161094,"byte_end":161101,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":162839,"byte_end":162845,"line_start":175,"line_end":175,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163042,"byte_end":163048,"line_start":185,"line_end":185,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165329,"byte_end":165338,"line_start":254,"line_end":254,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":173071,"byte_end":173087,"line_start":480,"line_end":480,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":178153,"byte_end":178169,"line_start":650,"line_end":650,"column_start":54,"column_end":70},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":178395,"byte_end":178411,"line_start":654,"line_end":654,"column_start":54,"column_end":70},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":178537,"byte_end":178553,"line_start":657,"line_end":657,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":178676,"byte_end":178692,"line_start":664,"line_end":664,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":179136,"byte_end":179152,"line_start":684,"line_end":684,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":179298,"byte_end":179314,"line_start":690,"line_end":690,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":179876,"byte_end":179880,"line_start":708,"line_end":708,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":180285,"byte_end":180289,"line_start":722,"line_end":722,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":180799,"byte_end":180807,"line_start":740,"line_end":740,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195781,"byte_end":195785,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":197890,"byte_end":197894,"line_start":101,"line_end":101,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":198061,"byte_end":198065,"line_start":105,"line_end":105,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":198175,"byte_end":198179,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":198371,"byte_end":198375,"line_start":122,"line_end":122,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":198797,"byte_end":198803,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":199547,"byte_end":199555,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200085,"byte_end":200091,"line_start":196,"line_end":196,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200317,"byte_end":200323,"line_start":207,"line_end":207,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203556,"byte_end":203565,"line_start":302,"line_end":302,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218598,"byte_end":218611,"line_start":727,"line_end":727,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228308,"byte_end":228321,"line_start":1049,"line_end":1049,"column_start":54,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228547,"byte_end":228560,"line_start":1053,"line_end":1053,"column_start":54,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228686,"byte_end":228699,"line_start":1056,"line_end":1056,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228822,"byte_end":228835,"line_start":1063,"line_end":1063,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":229276,"byte_end":229289,"line_start":1083,"line_end":1083,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":229429,"byte_end":229442,"line_start":1089,"line_end":1089,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":230066,"byte_end":230070,"line_start":1110,"line_end":1110,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":230652,"byte_end":230656,"line_start":1129,"line_end":1129,"column_start":64,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":231198,"byte_end":231202,"line_start":1146,"line_end":1146,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":231813,"byte_end":231821,"line_start":1167,"line_end":1167,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":232009,"byte_end":232017,"line_start":1175,"line_end":1175,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11737,"byte_end":11748,"line_start":306,"line_end":306,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":105}},{"kind":"Mod","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11758,"byte_end":11764,"line_start":307,"line_end":307,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":261}},{"kind":"Mod","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11774,"byte_end":11792,"line_start":308,"line_end":308,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":504}},{"kind":"Mod","span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/lib.rs","byte_start":11802,"byte_end":11817,"line_start":309,"line_end":309,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":636}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13844,"byte_end":13849,"line_start":29,"line_end":29,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":2025},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":13864,"byte_end":13869,"line_start":29,"line_end":29,"column_start":67,"column_end":72},"kind":"SuperTrait","from":{"krate":1,"index":1859},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":14584,"byte_end":14593,"line_start":55,"line_end":55,"column_start":48,"column_end":57},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":14866,"byte_end":14869,"line_start":67,"line_end":67,"column_start":48,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":15140,"byte_end":15142,"line_start":79,"line_end":79,"column_start":48,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":2697},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":15402,"byte_end":15405,"line_start":91,"line_end":91,"column_start":48,"column_end":51},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":3541},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/intrusive_pointer.rs","byte_start":16314,"byte_end":16326,"line_start":117,"line_end":117,"column_start":54,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":42},"to":{"krate":1,"index":2047}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21144,"byte_end":21153,"line_start":28,"line_end":28,"column_start":17,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":21661,"byte_end":21670,"line_start":49,"line_end":49,"column_start":17,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22336,"byte_end":22345,"line_start":70,"line_end":70,"column_start":27,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22474,"byte_end":22483,"line_start":77,"line_end":77,"column_start":27,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":2025}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22613,"byte_end":22622,"line_start":86,"line_end":86,"column_start":30,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":1769}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22747,"byte_end":22756,"line_start":93,"line_end":93,"column_start":31,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":22880,"byte_end":22889,"line_start":100,"line_end":100,"column_start":45,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":5925}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":23062,"byte_end":23071,"line_start":107,"line_end":107,"column_start":40,"column_end":49},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":1854}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/unsafe_ref.rs","byte_start":23118,"byte_end":23127,"line_start":109,"line_end":109,"column_start":40,"column_end":49},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":57},"to":{"krate":1,"index":1866}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/key_adapter.rs","byte_start":33955,"byte_end":33962,"line_start":61,"line_end":61,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":90},"to":{"krate":0,"index":101}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":34927,"byte_end":34931,"line_start":26,"line_end":26,"column_start":6,"column_end":10},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":35884,"byte_end":35888,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":111},"to":{"krate":1,"index":1854}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":36055,"byte_end":36059,"line_start":61,"line_end":61,"column_start":16,"column_end":20},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":111},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":36169,"byte_end":36173,"line_start":69,"line_end":69,"column_start":18,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":111},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":36365,"byte_end":36369,"line_start":78,"line_end":78,"column_start":21,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":111},"to":{"krate":1,"index":5925}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":37052,"byte_end":37059,"line_start":101,"line_end":101,"column_start":6,"column_end":13},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39503,"byte_end":39509,"line_start":206,"line_end":206,"column_start":50,"column_end":56},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":39706,"byte_end":39712,"line_start":216,"line_end":216,"column_start":35,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":42916,"byte_end":42925,"line_start":310,"line_end":310,"column_start":35,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":54529,"byte_end":54539,"line_start":643,"line_end":643,"column_start":31,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60658,"byte_end":60668,"line_start":851,"line_end":851,"column_start":54,"column_end":64},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":1866}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":60894,"byte_end":60904,"line_start":855,"line_end":855,"column_start":54,"column_end":64},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":1854}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":61030,"byte_end":61040,"line_start":858,"line_end":858,"column_start":40,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":2047}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":61163,"byte_end":61173,"line_start":865,"line_end":865,"column_start":48,"column_end":58},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":4624}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":61611,"byte_end":61621,"line_start":885,"line_end":885,"column_start":53,"column_end":63},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":61755,"byte_end":61765,"line_start":891,"line_end":891,"column_start":46,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":5925}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":62331,"byte_end":62335,"line_start":910,"line_end":910,"column_start":53,"column_end":57},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":232},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":62900,"byte_end":62904,"line_start":929,"line_end":929,"column_start":64,"column_end":68},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":232},"to":{"krate":1,"index":4643}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":63429,"byte_end":63433,"line_start":946,"line_end":946,"column_start":50,"column_end":54},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":232},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":63954,"byte_end":63962,"line_start":965,"line_end":965,"column_start":44,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":251},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/linked_list.rs","byte_start":64150,"byte_end":64158,"line_start":973,"line_end":973,"column_start":55,"column_end":63},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":251},"to":{"krate":1,"index":4643}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":80968,"byte_end":80972,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":81990,"byte_end":81994,"line_start":63,"line_end":63,"column_start":22,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":1854}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":82161,"byte_end":82165,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":82275,"byte_end":82279,"line_start":75,"line_end":75,"column_start":18,"column_end":22},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":82471,"byte_end":82475,"line_start":84,"line_end":84,"column_start":21,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":277},"to":{"krate":1,"index":5925}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":83299,"byte_end":83306,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96195,"byte_end":96201,"line_start":513,"line_end":513,"column_start":50,"column_end":56},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":318},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":96403,"byte_end":96409,"line_start":523,"line_end":523,"column_start":40,"column_end":46},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":99611,"byte_end":99620,"line_start":617,"line_end":617,"column_start":40,"column_end":49},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":107164,"byte_end":107173,"line_start":823,"line_end":823,"column_start":50,"column_end":59},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":108726,"byte_end":108732,"line_start":864,"line_end":864,"column_start":31,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":114610,"byte_end":114616,"line_start":1063,"line_end":1063,"column_start":46,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":125330,"byte_end":125336,"line_start":1368,"line_end":1368,"column_start":54,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":1866}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":125562,"byte_end":125568,"line_start":1372,"line_end":1372,"column_start":54,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":1854}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":125694,"byte_end":125700,"line_start":1375,"line_end":1375,"column_start":40,"column_end":46},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2047}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":125823,"byte_end":125829,"line_start":1382,"line_end":1382,"column_start":48,"column_end":54},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":4624}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":126614,"byte_end":126620,"line_start":1414,"line_end":1414,"column_start":53,"column_end":59},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":126746,"byte_end":126752,"line_start":1420,"line_end":1420,"column_start":46,"column_end":52},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":5925}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":127359,"byte_end":127371,"line_start":1441,"line_end":1441,"column_start":40,"column_end":52},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":128454,"byte_end":128459,"line_start":1478,"line_end":1478,"column_start":40,"column_end":45},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":130142,"byte_end":130146,"line_start":1524,"line_end":1524,"column_start":53,"column_end":57},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":473},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":130711,"byte_end":130715,"line_start":1543,"line_end":1543,"column_start":64,"column_end":68},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":473},"to":{"krate":1,"index":4643}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":131240,"byte_end":131244,"line_start":1560,"line_end":1560,"column_start":50,"column_end":54},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":473},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":131795,"byte_end":131803,"line_start":1581,"line_end":1581,"column_start":44,"column_end":52},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":492},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/rbtree.rs","byte_start":133066,"byte_end":133074,"line_start":1617,"line_end":1617,"column_start":55,"column_end":63},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":492},"to":{"krate":1,"index":4643}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":158991,"byte_end":158995,"line_start":26,"line_end":26,"column_start":6,"column_end":10},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":159926,"byte_end":159930,"line_start":56,"line_end":56,"column_start":22,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":510},"to":{"krate":1,"index":1854}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":160097,"byte_end":160101,"line_start":60,"line_end":60,"column_start":16,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":510},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":160211,"byte_end":160215,"line_start":68,"line_end":68,"column_start":18,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":510},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":160407,"byte_end":160411,"line_start":77,"line_end":77,"column_start":21,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":510},"to":{"krate":1,"index":5925}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":161094,"byte_end":161101,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":162839,"byte_end":162845,"line_start":175,"line_end":175,"column_start":50,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":535},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":163042,"byte_end":163048,"line_start":185,"line_end":185,"column_start":35,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":165329,"byte_end":165338,"line_start":254,"line_end":254,"column_start":35,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":173071,"byte_end":173087,"line_start":480,"line_end":480,"column_start":31,"column_end":47},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":178153,"byte_end":178169,"line_start":650,"line_end":650,"column_start":54,"column_end":70},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":1866}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":178395,"byte_end":178411,"line_start":654,"line_end":654,"column_start":54,"column_end":70},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":1854}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":178537,"byte_end":178553,"line_start":657,"line_end":657,"column_start":40,"column_end":56},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":2047}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":178676,"byte_end":178692,"line_start":664,"line_end":664,"column_start":48,"column_end":64},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":4624}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":179136,"byte_end":179152,"line_start":684,"line_end":684,"column_start":53,"column_end":69},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":179298,"byte_end":179314,"line_start":690,"line_end":690,"column_start":46,"column_end":62},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":5925}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":179876,"byte_end":179880,"line_start":708,"line_end":708,"column_start":53,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":615},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":180285,"byte_end":180289,"line_start":722,"line_end":722,"column_start":50,"column_end":54},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":615},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/singly_linked_list.rs","byte_start":180799,"byte_end":180807,"line_start":740,"line_end":740,"column_start":44,"column_end":52},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":195781,"byte_end":195785,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":197890,"byte_end":197894,"line_start":101,"line_end":101,"column_start":22,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":643},"to":{"krate":1,"index":1854}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":198061,"byte_end":198065,"line_start":105,"line_end":105,"column_start":16,"column_end":20},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":643},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":198175,"byte_end":198179,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":643},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":198371,"byte_end":198375,"line_start":122,"line_end":122,"column_start":21,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":643},"to":{"krate":1,"index":5925}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":198797,"byte_end":198803,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":199547,"byte_end":199555,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200085,"byte_end":200091,"line_start":196,"line_end":196,"column_start":50,"column_end":56},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":671},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":200317,"byte_end":200323,"line_start":207,"line_end":207,"column_start":35,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":203556,"byte_end":203565,"line_start":302,"line_end":302,"column_start":35,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":218598,"byte_end":218611,"line_start":727,"line_end":727,"column_start":31,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228308,"byte_end":228321,"line_start":1049,"line_end":1049,"column_start":54,"column_end":67},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":714},"to":{"krate":1,"index":1866}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228547,"byte_end":228560,"line_start":1053,"line_end":1053,"column_start":54,"column_end":67},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":714},"to":{"krate":1,"index":1854}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228686,"byte_end":228699,"line_start":1056,"line_end":1056,"column_start":40,"column_end":53},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":714},"to":{"krate":1,"index":2047}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":228822,"byte_end":228835,"line_start":1063,"line_end":1063,"column_start":48,"column_end":61},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":714},"to":{"krate":1,"index":4624}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":229276,"byte_end":229289,"line_start":1083,"line_end":1083,"column_start":53,"column_end":66},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":714},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":229429,"byte_end":229442,"line_start":1089,"line_end":1089,"column_start":46,"column_end":59},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":714},"to":{"krate":1,"index":5925}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":230066,"byte_end":230070,"line_start":1110,"line_end":1110,"column_start":53,"column_end":57},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":230652,"byte_end":230656,"line_start":1129,"line_end":1129,"column_start":64,"column_end":68},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":4643}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":231198,"byte_end":231202,"line_start":1146,"line_end":1146,"column_start":50,"column_end":54},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":766},"to":{"krate":1,"index":1564}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":231813,"byte_end":231821,"line_start":1167,"line_end":1167,"column_start":44,"column_end":52},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":787},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/aprokruov/.cargo/registry/src/github.com-1ecc6299db9ec823/intrusive-collections-0.8.4/src/xor_linked_list.rs","byte_start":232009,"byte_end":232017,"line_start":1175,"line_end":1175,"column_start":55,"column_end":63},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":787},"to":{"krate":1,"index":4643}}]}